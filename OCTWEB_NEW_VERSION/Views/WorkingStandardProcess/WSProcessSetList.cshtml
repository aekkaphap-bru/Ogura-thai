@model OCTWEB_NET45.Models.WorkingStandardProcessSetModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Working Standard Process Setup List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <div class="container">
                <div class="col">
                    <h4 class="page-title ">Working Standard Process <span style="color:red;">Setup</span></h4>
                    <p class="text-success">@ViewBag.Message</p>
                    @Html.ValidationSummary(true)
                </div>
            </div> 
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col">
                    @using (Html.BeginForm("WSProcessSetList", "WorkingStandardProcess", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
                    {
                        <fieldset>
                            <div class="form-row justify-content-center">
                                <div class="col-md-2 align-self-end">
                                    <div class="form-group">
                                        <label class="mb-1">Department: </label>
                                        @Html.DropDownList("searchDepartmentId", Model.SelectDepartmentId, "All", new { @class = "form-control form-control-sm", style = "width:100%" })
                                        <input type="hidden" name="submit_var" id="submit_var" value="">
                                    </div>
                                </div>
                                <div class="col-md-3 align-self-end">
                                    <div class="form-group">
                                        <label class="mb-1">Working Standard Type: </label>
                                        @Html.DropDownList("searchWorkingStandardType", Model.SelectWorkingStandardType, "All", new { @class = "form-control form-control-sm", style = "width:100%" })
                                    </div>
                                </div>
                                <div class="col-md-3 align-self-end">
                                    <div class="form-group">
                                        <label class="mb-1">Working Standard Process: </label>
                                        @Html.TextBoxFor(m => m.searchWorkingStandardProcess, "", new { @class = "form-control form-control-sm", style = "width:100%" })
                                    </div>
                                </div>
                                <div class="col-md-4 align-self-end">
                                    <div class="form-group">
                                        <button type="submit" id="SearchBtn" name="SearchBtn" value="Search" class="btn btn-sm btn-success">
                                            <i class="fas fa-search"></i> Search
                                        </button>
                                        <button type="submit" id="ExportToCsvBtn" name="ExportToCsvBtn" class="btn btn-sm btn-outline-primary" value="Export">
                                            <i class="fas fa-file"></i> Export
                                        </button>
                                        <input hidden="hidden" id="ExportToCsv" name="ExportToCsv" value="null" />

                                        <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                            <i class="fas fa-eraser"></i> Clear
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    }
                </div>
            </div>
        </div>
    </div> 
</div>

@using (Html.BeginForm("Delete", "WorkingStandardProcess", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form2" }))
{
    <div class="row">
        <div class="col">
            <div class="form-group">
                <a href="@Url.Action(actionName:"Create"
                        ,controllerName:"WorkingStandardProcess")" class="btn btn-sm btn-primary">
                    <i class="fas fa-plus"></i> Add
                </a>
                <button type="button" id="deleteall" name="deleteall" value="Delete" class="btn btn-sm btn-danger">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
            </div>
        </div>
    </div>
    <div class="row">
        @if (Model.WSR_WorkingStandardProcessEditModelPagedList != null && Model.WSR_WorkingStandardProcessEditModelPagedList.Any())
        {
            <table class="tablecustom" id="table1" style="font-size:14px;">
                <thead>
                    <tr>
                        <th width="5%">
                            <input type="checkbox" name="select-all" id="select-all" />
                        </th>
                        <th width="5%">
                            Edit
                        </th>
                        <th width="5%">
                            Items
                        </th>
                        <th>
                            Department
                        </th>
                        <th>
                            Working Standard Type
                        </th>
                        <th>
                            Working Standard Process
                        </th>
                        <th>
                            Note
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.WSR_WorkingStandardProcessEditModelPagedList.Select((value, i) => new { i, value }))
                    {
                        <tr>
                            <td>
                                <input type="checkbox" name="selectedItem" value="@(item.value.WSP_Id)" />
                            </td>
                            <td>
                                <a href="@Url.Action(actionName: "Edit"
                            ,controllerName: "WorkingStandardProcess"
                            ,routeValues: new {id = item.value.WSP_Id })" class="btn btn-sm btn-success">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                            </td>
                            <td>
                                @((item.i + 1) + (30 * (Model.WSR_WorkingStandardProcessEditModelPagedList.PageNumber - 1)))
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.DepartmentName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.WorkingStandardType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.WSP_ProcessName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.WSP_Note)
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        }
    </div>
}
@if (Model.WSR_WorkingStandardProcessEditModelPagedList != null && Model.WSR_WorkingStandardProcessEditModelPagedList.Any())
    {
        <div class="row justify-content-center">
            Page @(Model.WSR_WorkingStandardProcessEditModelPagedList.PageCount < Model.WSR_WorkingStandardProcessEditModelPagedList.PageNumber ? 0 : Model.WSR_WorkingStandardProcessEditModelPagedList.PageNumber) of @Model.WSR_WorkingStandardProcessEditModelPagedList.PageCount
        </div>
        <div class="row justify-content-center">
            @Html.PagedListPager(Model.WSR_WorkingStandardProcessEditModelPagedList, page => Url.Action("WSProcessSetList", new RouteValueDictionary()
                {
                    {"Page",page},
                    {"searchDepartmentId",Model.searchDepartmentId},
                    {"searchWorkingStandardType",Model.searchWorkingStandardType},
                    {"searchWorkingStandardProcess",Model.searchWorkingStandardProcess},
                }))
        </div>
    }

<script language="JavaScript">
    // Listen for click on toggle checkbox
    $('#select-all').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
            });
        }
    });

    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $(document).ready(function () {

        $("#searchWorkingStandardProcess").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/WorkingStandardProcess/GetWorkingStandardProcessName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

    });


    $("#clear").click(function () {
        $('#searchWorkingStandardType').val(null).trigger('change');
        $('#searchWorkingStandardProcess').val(null).trigger('change');
        $('#searchDepartmentId').val(null).trigger('change');

        /* Clear table */
        $("#table1 tbody").empty();

    });

    $("#SearchBtn").click(function () {
        $("#ExportToCsv").val("");
        document.forms["Form1"].submit();
    })

    $("#ExportToCsvBtn").click(function () {
        $("#ExportToCsv").val("ExportToCsv");
        document.forms["Form1"].submit();
    })


    $("#deleteall").click(function () {
        Swal.fire({
            title: "Are you sure?",
            text: "Delete all selected elements?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes "
        }).then(function (result) {
            if (result.isConfirmed) {
                $.ajax({
                    url: $("#Form2").attr("action"),
                    type: "POST",
                    data: $("#Form2").serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Deleted!",
                                text: response.message,
                                icon: "success",
                                timer: 2000,
                                showCancelButton: false,
                                showConfirmButton: false,
                                timerProgressBar: true,
                                didClose: function () {
                                    location.reload();
                                }
                            });
                        }
                        else {
                            Swal.fire({
                                icon: "error",
                                title: 'Error',
                                text: response.message,
                                confirmButtonColor: "#3085d6",
                            });
                        }

                    }

                });
            }

        });

    });


    $("#table1 tbody tr").click(function () {

        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            $(this).addClass('selected');
        }

    });

    $(function () {
        $('#searchDepartmentId').on("change", function () {
            var department = $('#searchDepartmentId').val();
            var obj = { department: department };
            AjaxCall('/WorkingStandardProcess/GetWSType', JSON.stringify(obj), 'POST').done(function (response) {
                if (response.length > 0) {
                    $('#searchWorkingStandardType').html('');
                    var options = '';
                    options += '<option value="">All</option>';
                    for (var i = 0; i < response.length; i++) {
                        options += '<option value="' + response[i].val + '">' + response[i].label + '</option>';
                    }
                    $('#searchWorkingStandardType').append(options);
                }
                else {
                    $('#searchWorkingStandardType').html('');
                }
            }).fail(function (error) {
                //alert(error.StatusText);
                $('#searchWorkingStandardType').html('');
            });
        });

    });

    function AjaxCall(url, data, type) {
        return $.ajax({
            url: url,
            type: type ? type : 'GET',
            data: data,
            contentType: 'application/json'
        });
    }

    //$("#deleteall").click(function () {

    //        alert("OK");

    //});


</script>
