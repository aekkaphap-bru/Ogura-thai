@model PagedList.IPagedList<OCTWEB_NET45.Models.DocumentListDisplayViewModel>
@using PagedList.Mvc

@{
    ViewBag.Title = "Document Request List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // สร้าง Dictionary สำหรับ Status Class เพื่อลดความซ้ำซ้อนใน Loop
    var statusClasses = new Dictionary<string, string>
{
        { "COMPLETE", "status-approved" },
        { "REJECTED", "status-rejected" },
        { "EDITING", "status-edit" },
        { "PENDING APPROVAL", "status-pending" }
    };

    // ดึง User ID มาเก็บไว้นอก Loop
    var currentUserId = ViewBag.CurrentUserId as int? ?? 0;
}

@section Styles {
    <link href="~/Content/oct-documentcontroll.css" rel="stylesheet" />
}

<div class="container">
    <div class="header-section">
        <div class="logo-section">
            <div class="header-title">
                <h1><i class="fas fa-folder-open"></i> OCT Document Control System</h1>
                <div class="header-subtitle">Organization Document Request and Tracking System</div>
            </div>
        </div>
    </div>

    <div class="info-card">
        <div class="main-content">
            @using (Html.BeginForm("List", "Document", FormMethod.Get, new { id = "filterForm" }))
            {
                <div class="action-bar">
                    <div class="search-container">

                        <input type="text" name="searchString" class="search-input" placeholder="Search.." value="@ViewBag.CurrentFilter">
                        <i class="fas fa-search search-icon"></i>
                    </div>

                    <select name="statusFilter" class="filter-select" onchange="this.form.submit()">
                        <option value="">All Status</option>
                        <option value="PENDING APPROVAL" selected="@(ViewBag.CurrentStatus == "PENDING APPROVAL")">Pending Approval</option>
                        <option value="REJECTED" selected="@(ViewBag.CurrentStatus == "REJECTED")">Rejected</option>
                        <option value="EDITING" selected="@(ViewBag.CurrentStatus == "EDITING")">Editing</option>
                    </select>

                    @Html.ActionLink("New Request", "Create", "Document", null, new { @class = "btn-new-request" })
                </div>
            }

            <div class="tab-navigation">
                <button class="tab-btn active" data-tab="pending">
                    <i class="fas fa-clock"></i>
                    Pending Approvals
                    <span class="tab-count">@ViewBag.PendingCount</span>
                </button>
                <button class="tab-btn" data-tab="completed">
                    <i class="fas fa-check-circle"></i>
                    Completed Items
                    <span class="tab-count">@ViewBag.CompletedCount</span>
                </button>
            </div>



            <!-- แก้ไข document-main-list div เป็น 2 ส่วน -->
            <div class="tab-content">
                <!-- Tab 1: รายการรอการอนุมัติ -->
                <div class="tab-pane active" id="pending-tab">
                    <div class="document-main-list" id="pending-document-list">
                        @if (!Model.Where(x => x.Status != "COMPLETE").Any())
                        {
                            <div class="empty-state">
                                <i class="fas fa-inbox"></i>
                                <p>No pending approvals</p>
                            </div>
                        }
                        else
                        {
                            foreach (var item in Model.Where(x => x.Status != "COMPLETE"))
                            {
                                var statusClass = statusClasses.ContainsKey(item.Status) ? statusClasses[item.Status] : "status-draft";

                                <div class="document-main-item">
                                    <div class="document-info">
                                        <div class="document-title">@Html.Encode(item.WS_number ?? "N/A")</div>
                                        <div class="document-meta">
                                            <span class="document-id">ID: @item.LId.ToString("D5")</span>
                                            <span><i class="fas fa-calendar-alt"></i> @item.Created_at</span>
                                        </div>
                                    </div>

                                    <div class="document-actions">
                                        <div class="status-badge @statusClass">@item.Status</div>
                                        <a href="@Url.Action("Details", new { id = item.LId })" class="btn-action btn-view" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button class="btn-action btn-edit" data-id="@item.LId" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button type="button" class="btn-action btn-delete" data-id="@item.LId" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                <!-- Tab 2: รายการที่สำเร็จแล้ว -->
                <div class="tab-pane" id="completed-tab">
                    <div class="document-main-list" id="completed-document-list">
                        @if (!Model.Where(x => x.Status == "COMPLETE").Any())
                        {
                            <div class="empty-state">
                                <i class="fas fa-check-circle"></i>
                                <p>No completed items yet</p>
                            </div>
                        }
                        else
                        {
                            foreach (var item in Model.Where(x => x.Status == "COMPLETE").OrderByDescending(x => x.DarNumber))
                            {
                                <div class="document-main-item completed-item">
                                    <div class="document-info">
                                        <div class="document-title">Dar Number : @Html.Encode(item.DarNumber ?? "N/A")</div>
                                        <div class="document-meta">
                                            <span class="document-id">@Html.Encode(item.WS_number ?? "N/A")</span>
                                            <span><i class="fas fa-calendar-alt"></i> @item.Update_at</span>
                                        </div>
                                    </div>

                                    <div class="document-actions">
                                        <div class="status-badge status-approved">@item.Status</div>
                                        <a href="@Url.Action("Details", new { id = item.LId })" class="btn-action btn-view" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button class="btn-action btn-download" data-id="@item.LId" title="Download">
                                            <i class="fas fa-download"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    
</div>





<!-- เพิ่ม JavaScript สำหรับ Tab Switching -->
<script>

    $(function () {
    // --- Single Delegated Event Listener ---
        $('.document-main-list').on('click', '.btn-action', function (e) {
            const button = $(this);
            const id = button.data('id');
            // ใช้ `antiForgeryToken` ร่วมกัน
            const antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

            if (button.hasClass('btn-edit')) {
                e.preventDefault();
                handleEditClick(id, antiForgeryToken);
            }

            if (button.hasClass('btn-delete')) {
                e.preventDefault();
                handleDeleteClick(id, antiForgeryToken);
            }
        });

        // --- Edit Function ---
        function handleEditClick(id, token) {
            $.ajax({
                url: '@Url.Action("CanEdit", "Document")',
                type: 'POST',
                data: { id: id, __RequestVerificationToken: token },
                success: function (res) {
                    if (!res.success) {
                        Swal.fire("ไม่สามารถดำเนินการได้", res.message, "error");
                        return;
                    }

                    if (res.warningMessage) {
                        Swal.fire({
                            title: "โปรดยืนยัน",
                            text: res.warningMessage,
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonText: "ดำเนินการต่อ",
                            cancelButtonText: "ยกเลิก"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = res.redirectUrl;
                            }
                        });
                    } else {
                        window.location.href = res.redirectUrl;
                    }
                },
                error: function () {
                    Swal.fire("เกิดข้อผิดพลาด", "ไม่สามารถติดต่อเซิร์ฟเวอร์ได้", "error");
                }
            });
        }

        // --- Delete Function (Improved with SweetAlert2) ---
        function handleDeleteClick(id, token) {
            Swal.fire({
                title: 'คุณแน่ใจหรือไม่?',
                text: "คุณต้องการลบคำร้องนี้ใช่หรือไม่? ข้อมูลจะไม่สามารถกู้คืนได้",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                confirmButtonText: 'ใช่, ลบเลย!',
                cancelButtonText: 'ยกเลิก'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Document")',
                        type: 'POST',
                        data: { id: id, __RequestVerificationToken: token },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire('ลบสำเร็จ!', response.message, 'success')
                                    .then(() => location.reload());
                            } else {
                                Swal.fire('เกิดข้อผิดพลาด!', response.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('เกิดข้อผิดพลาด!', 'ไม่สามารถส่งคำขอลบข้อมูลได้', 'error');
                        }
                    });
                }
            });
        }
    });

    $(function() {
        // Tab switching functionality
        $('.tab-btn').on('click', function() {
            const tabId = $(this).data('tab');

            // Remove active class from all tabs and panes
            $('.tab-btn').removeClass('active');
            $('.tab-pane').removeClass('active');

            // Add active class to clicked tab and corresponding pane
            $(this).addClass('active');
            $('#' + tabId + '-tab').addClass('active');

            // Store active tab in sessionStorage
            sessionStorage.setItem('activeDocumentTab', tabId);
        });

        // Restore active tab on page load
        const activeTab = sessionStorage.getItem('activeDocumentTab') || 'pending';
        $('.tab-btn[data-tab="' + activeTab + '"]').click();

        // Download functionality for completed documents
        $(document).on('click', '.btn-download', function(e) {
            e.preventDefault();
            const id = $(this).data('id');

            // Add your download logic here
            window.open('@Url.Action("ExportDarLog", "Document")' + '/' + id, '_blank');
        });
    });


</script>