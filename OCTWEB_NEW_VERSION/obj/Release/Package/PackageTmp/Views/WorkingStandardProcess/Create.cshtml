@model OCTWEB_NET45.Models.WSR_WorkingStandardProcessEditModel
@{
    ViewBag.Title = "Create Working Standard Process";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>
    <div class="row">
        <a href="/WorkingStandardProcess/WSProcessSetList" class="btn-outline-secondary">WS Process List <i class="fa fa-angle-right"></i> </a>&nbsp;
    </div>
    <div class="row">
        <div class="container">
            <div class="card shadow-lg border-0 rounded-lg mt-0 mb-3">
                <div class="card-header justify-content-center">
                    <h3 class="font-weight-bolder my-1 text-center">Create Working Standard Process</h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "WorkingStandardProcess", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
                    {
                        <div class="form-row justify-content-center">
                            <div class="col">
                                <div class="form-group">
                                    @Html.ValidationSummary(true)
                                    <p class="text-danger">@ViewBag.Message</p>
                                </div>
                            </div>
                        </div>
                        <div class="form-row justify-content-center">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Department: </label>
                                    @Html.DropDownList("searchDepartmentId", Model.SelectDepartmentId, "Select", new { @class = "form-control form-control-sm", style = "width:100%" })
                                    @Html.ValidationMessageFor(m => m.searchDepartmentId, "", new { @class = "text-danger" })
                                    <input type="hidden" name="submit_var" id="submit_var" value="">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Working Standard Type: </label>
                                    @Html.DropDownList("WST_Id", Model.SelectWorkingStandardTypeId, "Select", new { @class = "form-control form-control-sm", style = "width:100%" })
                                    @Html.ValidationMessageFor(m => m.WST_Id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="form-row justify-content-center">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Working Standard Process: </label>
                                    @Html.TextBoxFor(m => m.WSP_ProcessName, new { @class = "form-control form-control-sm", style = "width:100%" , onkeyup = "this.value = this.value.toUpperCase()" , maxlength = "30" })
                                    @Html.ValidationMessageFor(m => m.WSP_ProcessName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Note: </label>
                                    @Html.TextAreaFor(m => m.WSP_Note, new { @class = "form-control form-control-sm" })
                                    @Html.ValidationMessageFor(m => m.WSP_Note, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-row justify-content-center">
                            <div class="col">
                                <div class="form-group text-center">
                                    <button type="button" value="Create" id="save" class="btn btn-primary">
                                        <i class="fas fa-save"></i> Save
                                    </button>
                                    &nbsp;
                                    <button type="button" onclick="history.back()" name="Cancel" class="btn btn-outline-primary">
                                        <i class="fas fa-ban"></i> Cancel
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<script language="JavaScript">
    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $(document).ready(function () {

    });

    $(function () {
       

        $('#searchDepartmentId').on("change", function () {
            var department = $('#searchDepartmentId').val();
            var obj = { department: department };
            AjaxCall('/WorkingStandardProcess/GetWSTypeCreate', JSON.stringify(obj), 'POST').done(function (response) {
                if (response.length > 0) {
                    $('#WST_Id').html('');
                    var options = '';
                    options += '<option value="0">Select WS Type</option>';
                    for (var i = 0; i < response.length; i++) {
                        options += '<option value="' + response[i].val + '">' + response[i].label + '</option>';
                    }
                    $('#WST_Id').append(options);
                }
                else {
                    $('#WST_Id').html('');
                }
            }).fail(function (error) {
                //alert(error.StatusText);
                $('#WST_Id').html('');
            });
        });
    });

    function AjaxCall(url, data, type) {
        return $.ajax({
            url: url,
            type: type ? type : 'GET',
            data: data,
            contentType: 'application/json'
        });
    }

    $("#save").click(function (event) {
        event.preventDefault();

        let isValid = true;

        if ($("#searchDepartmentId").val() === "") {
            isValid = false;
            $("#searchDepartmentId").next(".text-danger").text("Please select a department.");
        } else {
            $("#searchDepartmentId").next(".text-danger").text("");
        }

        if ($("#WST_Id").val().trim() === "") {
            isValid = false;
            $("#WST_Id").next(".text-danger").text("Please select a Working Standard Type.");
        } else {
            $("#WST_Id").next(".text-danger").text("");
        }

        if ($("#WSP_ProcessName").val().trim() === "") {
            isValid = false;
            $("#WSP_ProcessName").next(".text-danger").text("Working Standard Process is required.");
        } else {
            $("#WSP_ProcessName").next(".text-danger").text("");
        }

        if (!isValid) {
            return;
        }

        $.ajax({
            url: $("#Form1").attr("action"),
            type: "POST",
            data: $("#Form1").serialize(),
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        title: "Success!",
                        text: response.message,
                        icon: "success",
                        timer: 2000,
                        showCancelButon: false,
                        showConfirmButton: false,
                        timerProgressBar: true
                    }).then(function () {
                        window.location.href = response.redirectUrl;
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: response.message || "Validation failed",
                        icon: "error",

                    })
                }
            },
            error: function () {
                Swal.fire({
                    title: "Unexpected Error!",
                    text: "An error occurred while processing your request. Please try again later.",
                    icon: "error",
                });
            }

        });

    });

   
</script>