@model OCTWEB_NET45.Models.WorkingStandardTypeSetModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Working Standard Type Set";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col">
            <h4 class="font-weight-bolder my-1 text-center">Working Standard Type <span style="color:red;">Set</span></h4>
            <p class="text-success">@ViewBag.Message</p>
            <p class="text-danger">@ViewBag.ErrorMessage</p>
            @Html.ValidationSummary(true)
        </div>
    </div>
    <div class="row">
        <div class="col">
            @using (Html.BeginForm("WSTypeSetList", "WorkingStandardTypeSet", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
            {
                <fieldset>
                    <legend>Enter condition for search working standard type data</legend>
                    <div class="form-row justify-content-center">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-1">Department: </label>
                                @Html.DropDownList("searchDepartmentId", Model.SelectDepartmentId, "All", new { @class = "form-control form-control-sm", style = "width:100%" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-1">Working Standard Type: </label>
                                @Html.TextBoxFor(m => m.searchWorkingStandardType, new { @class = "form-control form-control-sm" })
                            </div>
                        </div>
                        <div class="col-md-6 align-self-end">
                            <div class="form-group">
                                <button type="submit" id="SearchBtn" name="SearchBtn" value="Search" class="btn btn-sm btn-success">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <button type="button" name="ExportToCsvBtn" id="ExportToCsvBtn" class="btn btn-sm btn-outline-primary" value="Export">
                                    <i class="fas fa-file"></i> Export
                                </button>
                                <input hidden="hidden" id="ExportToCsv" name="ExportToCsv" value="null" />

                                <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                    <i class="fas fa-eraser"></i> Clear
                                </button>
                            </div>
                        </div>
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>

<div class="container-fluid">
    @using (Html.BeginForm("Delete", "WorkingStandardTypeSet", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form2" }))
    {
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <a href="@Url.Action(actionName:"Create"
                            , controllerName: "WorkingStandardTypeSet")" class="btn btn-sm btn-primary">
                        <i class="fas fa-plus"></i><span> Create</span>
                    </a>
                    <button type="button" id="deleteall" name="deleteall" value="Delete" class="btn btn-sm btn-danger">
                        <i class="fas fa-trash-alt"></i> Delete
                    </button>
                </div>
            </div>
        </div>

        <div class="row">
            @if (Model.WSR_WorkingStandardTypeEditModelPagedList != null && Model.WSR_WorkingStandardTypeEditModelPagedList.Any())
            {
                <table class="tablecustom" id="table1" style="font-size:14px;">
                    <thead>
                        <tr>
                            <th width="5%">
                                <input type="checkbox" name="select-all" id="select-all" />
                            </th>
                            <th width="5%">
                                Edit
                            </th>
                            <th width="5%">
                                Items
                            </th>
                            <th>
                                Department
                            </th>
                            <th>
                                Working Standard Type
                            </th>
                            <th>
                                Note
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.WSR_WorkingStandardTypeEditModelPagedList.Select((value, i) => new { i, value }))
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" name="selectedItem" value="@(item.value.WST_Id)" />
                                </td>
                                <td>
                                    <a href="@Url.Action(actionName: "Edit"
                         , controllerName: "WorkingStandardTypeSet"
                         , routeValues: new {id= item.value.WST_Id })" class="btn btn-sm btn-success">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                </td>
                                <td>
                                    @((item.i + 1) + (30 * (Model.WSR_WorkingStandardTypeEditModelPagedList.PageNumber - 1)))
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.value.DepartmentName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.value.WST_Type)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.value.WST_Note)
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
        </div>
    }
    @if (Model.WSR_WorkingStandardTypeEditModelPagedList != null && Model.WSR_WorkingStandardTypeEditModelPagedList.Any())
    {
        <div class="row justify-content-center">
            Page @(Model.WSR_WorkingStandardTypeEditModelPagedList.PageCount < Model.WSR_WorkingStandardTypeEditModelPagedList.PageNumber ? 0 : Model.WSR_WorkingStandardTypeEditModelPagedList.PageNumber) of @Model.WSR_WorkingStandardTypeEditModelPagedList.PageCount
        </div>
        <div class="row justify-content-center">
            @Html.PagedListPager(Model.WSR_WorkingStandardTypeEditModelPagedList, page => Url.Action("WSTypeSetList", new RouteValueDictionary()
                {
                    {"Page",page},
                    {"searchDepartmentId",Model.searchDepartmentId},
                    {"searchWorkingStandardType",Model.searchWorkingStandardType},
                }))
        </div>
    }
    </div>


<script language="JavaScript">
    // Listen for click on toggle checkbox
    $('#select-all').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
            });
        }
    });

    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $(document).ready(function () {
        /*
        $("#searchDepartmentId").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        */
        $("#searchWorkingStandardType").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/WorkingStandardTypeSet/GetWorkingStandardTypeName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

    });

    $("#SearchBtn").click(function () {
        $("#ExportToCsv").val("");
        document.forms["Form1"].submit();
    })

    $("#ExportToCsvBtn").click(function () {
        $("#ExportToCsv").val("ExportToCsv");
        document.forms["Form1"].submit();
    })

    $("#clear").click(function () {
        $('#searchDepartmentId').val(null).trigger('change');
        $('#searchWorkingStandardType').val(null).trigger('change');

        //Clear table
        $("#table1 tbody").empty();



    });



    //$("#deleteall").click(function () {
    //    $("#ExportToCsv").val("");
    //    if (confirm('Delete all selected elements?'))
    //    {
    //        document.forms["Form2"].submit();
    //    }
    //})


    $("#deleteall").click(function () {
        Swal.fire({
            title: "Are you sure?",
            text: "Delete all selected elements?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes "
        }).then(function (result) {
            if (result.isConfirmed) {
                $.ajax({
                    url: $("#Form2").attr("action"),
                    type: "POST",
                    data: $("#Form2").serialize(),
                    success: function (response) {
                        if (response.message == "Deleted successfully.") {
                            Swal.fire({
                                title: "Deleted!",
                                text: response.message,
                                icon: "success",
                                timer: 2000,
                                showCancelButton: false,
                                showConfirmButton: false,
                                timerProgressBar: true,
                                didClose: function () {
                                   location.reload();
                                }
                            });
                        } //If --> Swal.fire
                        else {
                            Swal.fire({
                                icon: "error",
                                title: 'Error',
                                text: response.message,
                                confirmButtonColor: "#3085d6",
                            });
                        }//Else --> Swal.fire
                    }//success --> function
                })//ajax
            }//If
        }); //then --> function

    });//deleteall




    $("#table1 tbody tr").click(function () {

        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            $(this).addClass('selected');
        }

    });

    //
    (function ($) {
        showSwal = function (type) {
            'use strict';
            if (type === 'basic') {
                swal({
                    title: 'Read the alert!',
                    text: 'Thanks you for your support',
                    button: {
                        text: "OK",
                        value: true,
                        visible: true,
                        className: "btn btn-primary"
                    }
                })

            }
        }

    })(jQuery);


</script>