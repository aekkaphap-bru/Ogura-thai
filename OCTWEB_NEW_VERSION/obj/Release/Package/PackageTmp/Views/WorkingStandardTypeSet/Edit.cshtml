@model OCTWEB_NET45.Models.WSR_WorkingStandardTypeEditModel
@{
    ViewBag.Title = "Edit Working Standard Type";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <div class="row">
        <a href="/WorkingStandardTypeSet/WSTypeSetList" class="btn-outline-secondary">Working Standard Type List <i class="fa fa-angle-right"></i> </a>&nbsp;
    </div>
    <div class="row">
        <div class="container">
            <div class="card shadow-lg border-0 rounded-lg mt-0 mb-3">
                <div class="card-header justify-content-center">
                    <h3 class="font-weight-bolder my-1 text-center">Edit Working Standard Type</h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Edit", "WorkingStandardTypeSet", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "formedit" }))
                    {
                        <div class="form-row justify-content-center">
                            <div class="col">
                                <div class="form-group">
                                    @Html.ValidationSummary(true)
                                    <p class="text-danger">@ViewBag.Message</p>
                                    @Html.HiddenFor(m => m.WST_Id, new { @class = "form-control form-control-sm" })
                                </div>
                            </div>
                        </div>
                        <div class="form-row justify-content-center">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Department: </label>
                                    @Html.DropDownList("WST_Dept", Model.SelectDepartmentId, "Select Department", new { @class = "form-control form-control-sm", style = "width:100%" })
                                    <p class="text-danger">@Html.ValidationMessageFor(m => m.WST_Dept)</p>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="form-group">
                                    <label>Working Standard Type: </label>
                                    @Html.TextBoxFor(m => m.WST_Type, new { @class = "form-control form-control-sm", onkeyup = "this.value=this.value.toUpperCase()" , maxlength = "30" })
                                    <p class="text-danger">@Html.ValidationMessageFor(m => m.WST_Type)</p>
                                </div>
                            </div>
                        </div>
                        <div class="form-row justify-content-center">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Note: </label>
                                    @Html.TextAreaFor(m => m.WST_Note, new { @class = "form-control form-control-sm" })
                                    <p class="text-danger">@Html.ValidationMessageFor(m => m.WST_Note)</p>
                                </div>
                            </div>
                        </div>
                        <div class="form-row justify-content-center">
                            <div class="col">
                                <div class="form-group text-center">
                                    <button type="button" id="edited" name="edited" class="btn btn-success">
                                        <i class="fas fa-save"></i> Save
                                    </button>
                                    &nbsp;
                                    <button type="button" onclick="history.back()" name="Cancel" class="btn btn-outline-primary">
                                        <i class="fas fa-ban"></i> Cancel
                                    </button>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>


<script language="JavaScript">
    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $(document).ready(function () {

    });


    $("#edited").click(function (event) {
        event.preventDefault(); 

        let isValid = true;

        if ($("#WST_Dept").val() === "") {
            isValid = false;
            $("#WST_Dept").next(".text-danger").text("Please select a department.");
        } else {
            $("#WST_Dept").next(".text-danger").text("");
        }

        if ($("#WST_Type").val().trim() === "") {
            isValid = false;
            $("#WST_Type").next(".text-danger").text("Working Standard Type is required.");
        } else {
            $("#WST_Type").next(".text-danger").text("");
        }

        if (!isValid) {
            return;
        }

        Swal.fire({
            title: "Are you sure?",
            text: "Do you want to edit this Working Standard Type?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes"
        }).then(function (result) {
            if (result.isConfirmed) {
                $.ajax({
                    url: $("#formedit").attr("action"),
                    type: "POST",
                    data: $("#formedit").serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: "Edit Successful",
                                text: response.message,
                                icon: "success",
                                timer: 2000,
                                showCancelButton: false,
                                showConfirmButton: false,
                                timerProgressBar: true
                            }).then(function () {
                                window.location.href = response.redirectUrl; // ✅ แก้พิมพ์ผิด
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: response.message || "Validation failed.",
                                confirmButtonColor: "#3085d6",
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "Unexpected Error!",
                            text: "An error occurred while processing your request. Please try again later.",
                            icon: "error",
                        });
                    }
                });
            }
        });
    });

</script>