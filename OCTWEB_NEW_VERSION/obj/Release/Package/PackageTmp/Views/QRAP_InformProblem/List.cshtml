@model OCTWEB_NET45.Models.InformListModel
@using PagedList.Mvc
@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
   <div class="row">
       <div class="col">
           <h4 class="font-weight-bolder my-1 text-center">1. Inform Problem <span style="color:red;"></span></h4>
           <p class="text-success">@ViewBag.Message</p>
           <p class="text-danger">@ViewBag.errorMessage</p>
           @Html.ValidationSummary(true)
       </div>
   </div>
   <div class="row">
            <div class="col">
        @using (Html.BeginForm("List", "QRAP_InformProblem", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
        {
                <fieldset>
                    <legend>Enter condition for search problem data</legend>
                    <div class="form-row justify-content-center">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Occur Date: </label>
                                @{
                                    var start_date = Model.start_date.HasValue ? Model.start_date.Value.ToString("yyyy-MM-dd") : null;
                                }
                                <input type="date" name="start_date" id="start_date" class="form-control form-control-sm" value="@start_date" />
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>To: </label>
                                @{
                                    var end_date = Model.end_date.HasValue ? Model.end_date.Value.ToString("yyyy-MM-dd") : null;
                                }
                                <input type="date" name="end_date" id="end_date" class="form-control form-control-sm" value="@end_date">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Department: </label>
                                @Html.DropDownList("department_id", Model.SelectDepartmet, "", new { @class = "form-control form-control-sm", style = "width:100%" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Status: </label>
                                @Html.DropDownList("status", Model.SelectStatus, "", new { @class = "form-control form-control-sm", style = "width:100%" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Problem No: </label>
                                @Html.TextBoxFor(m => m.problem_no, new { @class = "form-control form-control-sm" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row justify-content-center">
                     
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Problem Detail: </label>
                                @Html.TextBoxFor(m => m.detail, new { @class = "form-control form-control-sm" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Owner: </label>
                                @Html.TextBoxFor(m => m.owner, new { @class = "form-control form-control-sm" })
                            </div>
                        </div>
                        <div class="col-md-6 align-self-end">
                            <div class="form-group">
                                <button type="submit" id="SearchBtn" name="SearchBtn" class="btn btn-sm btn-success" value="Search">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <!--
                                 <button type="button" name="ExportToCsvBtn" id="ExportToCsvBtn" class="btn btn-outline-primary" value="Export">
                                       <i class="fas fa-download"></i> Export
                                 </button>-->
                                <input hidden="hidden" id="ExportToCsv" name="ExportToCsv" value="null" />

                                <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                    <i class="fas fa-eraser"></i> Clear
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="form-row justify-content-center">
                      
                    </div>
                </fieldset>
                }
            </div>
        </div>
</div>
<div class="container-fluid">
    @using (Html.BeginForm("Delete", "QRAP_InformProblem", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "Form2" }))
    {
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <a href="@Url.Action(actionName:"Create"
                            , controllerName: "QRAP_InformProblem")" class="btn btn-primary btn-sm">
                        <i class="fas fa-plus"></i> Add
                    </a>

                    <button type="button" id="deleteall" name="deleteall" value="Delete" class="btn btn-danger btn-sm">
                        <i class="fas fa-trash-alt"></i> Delete
                    </button>
                </div>
            </div>
        </div>
        <div class="row">
            <table class="tablecustom" id="table1" style="font-size:14px;">
                <thead>
                    <tr>
                        <th>
                            Status
                        </th>
                        <th>
                            <input type="checkbox" name="select-all" id="select-all" />
                        </th>
                        <th>
                            Edit
                        </th>
                       
                        <th>
                            Items
                        </th>
                       
                        <th>
                            Problem No.
                        </th>
                        <th>
                            Occur
                        </th>
                        <th>
                            Problem 
                        </th>
                        <th>
                            Reason
                        </th>
                        <th>
                            Response Dept.
                        </th>
                        <th>
                            Owner
                        </th>
                        <th>
                            Detail
                        </th>                       
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.problemPagedListModel.Select((value, i) => new { i, value }))
                    {
                         
                         string status_style ="";
                         string status = "true";
                         if (item.value.status == 1)
                         {
                             status_style = " background-image: linear-gradient(to left, #ffffed, #ffffc4, #ffff99, #ffff69, #fffe23);";
                             //status_style = " background: linear-gradient(to right, #e9e914, #ffcf79, #ffd1d5, #ffebff, #ffffff) ;";
                             //status_style = " background-image: linear-gradient(to left, #ffffff, #ffffff, #ffffff, #ffffff, #ffffff, #fcf9ff, #fcf2ff, #ffebff, #ffd7ef, #ffc8b5, #ffd067, #e9e914);";
                             status = "disabled='disabled'";
                         }
                        if (item.value.status == 0)
                        {
                            status_style = "background: linear-gradient(to right, #f05757, #fc81a0, #f6afd7, #f1daf6, #ffffff); ";
                            //status_style = " background: linear-gradient(to left, #ffffff, #ffffff, #ffffff, #ffffff, #ffffff, #f8f4ff, #f5e9fd, #f4ddf9, #fabfe7, #ff9fc6, #ff7e99, #ff6262);";             
                            status = "";
                        }
                        if (item.value.status == 2)
                        {
                           status_style = " background-image: linear-gradient(to left, #efffed, #ccffc6, #a5ff9e, #77ff73, #23ff3f);";
                           //status_style = "background: linear-gradient(to right, #57f078, #00fce2, #6cfcff, #d6f8ff, #ffffff) ; ";
                           //status_style = " background: linear-gradient(to left, #ffffff, #ffffff, #ffffff, #ffffff, #ffffff, #f7fbff, #e8f9ff, #d6f8ff, #9dfafb, #63fae2, #41f7b6, #57f078);"; 
                           status = "disabled='disabled'";
                        }
                                
                        <tr >
                            <td style="@status_style ">
                                <div class="col">
                                    @if (item.value.status == 1)
                                    {
                                        <span class="badge badge-warning" > Operating </span>
                                    }
                                    @if (item.value.status == 0)
                                    {
                                         <span class="badge badge-danger" > None operate </span>
                                    }
                                    @if (item.value.status == 2)
                                    {
                                         <span class="badge badge-success" > Completed </span>
                                    }
                                </div>
                            </td>
                            <td width="2%">
                                <input type="checkbox" name="selectedItem" value="@(item.value.id)" @status />
                            </td>
                            <td class="text-center">
                                @if(item.value.status == 0)
                                {
                                    <a href="@Url.Action(actionName: "Edit"
                                         , controllerName: "QRAP_InformProblem"
                                         , routeValues: new {id = item.value.id })" class="btn btn-sm btn-success">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                }
                               
                            </td>                          
                            <td>
                                @((item.i + 1) + (30 * (Model.problemPagedListModel.PageNumber - 1)))
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.value.problem_no)
                            </td>
                            <td>
                                @{
                                    var date_str = item.value.date.ToString("yyyy-MM-dd");
                                }
                                @date_str
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.value.detail)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.value.reason)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.value.department)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.value.owner)
                            </td>
                            <td>
                                @if (!String.IsNullOrEmpty(item.value.file))
                                {
                                    <a href="@Url.Action(actionName: "DownloadFile"
                                        , controllerName: "QRAP_InformProblem"
                                        , routeValues: new {filename = item.value.file })" class="btn btn-sm link-info">
                                        <i class="fas fa-download"></i><strong> Download File</strong>
                                    </a>
                                }
                            </td>
                          
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    <div class="row justify-content-center">
        Page @(Model.problemPagedListModel.PageCount < Model.problemPagedListModel.PageNumber ? 0 : Model.problemPagedListModel.PageNumber) of @Model.problemPagedListModel.PageCount
    </div>
    <div class="row justify-content-center">
        @Html.PagedListPager(Model.problemPagedListModel, page => Url.Action("List", new RouteValueDictionary()
        {
            {"Page",page},
            {"start_date",Model.start_date},
            {"end_date",Model.end_date},
            {"department_id",Model.department_id},
            {"problem_no",Model.problem_no},
            {"detail",Model.detail},
            {"owner",Model.owner},
            {"status",Model.status},
           
        }))
    </div>
</div>

<script language="JavaScript">
    // Listen for click on toggle checkbox
    $('#select-all').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
            });
        }
    });

    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $("#SearchBtn").click(function () {
        $("#ExportToCsv").val("");
        document.forms["Form1"].submit();
    })

    $("#ExportToCsvBtn").click(function () {
        $("#ExportToCsv").val("ExportToCsv");
        document.forms["Form1"].submit();
    })

    $("#deleteall").click(function () {
        $("#ExportToCsv").val("");
        if (confirm('Delete all selected elements?')) {
            document.forms["Form2"].submit();
        }
    })


    $("#clear").click(function () {
        $('#start_date').val(null).trigger('change');
        $('#end_date').val(null).trigger('change');
        $('#problem_no').val(null).trigger('change');
        $('#department_id').val(null).trigger('change');
        $('#detail').val(null).trigger('change');
        $('#owner').val(null).trigger('change');
        $('#status').val(null).trigger('change');

    });

    $(document).ready(function () {

        $("#department_id").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#status").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });

    });

    $("#table1 tbody tr").click(function () {

        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            $(this).addClass('selected');
        }
    });

    $(document).ready(function () {
        $("#problem_no").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/QRAP_InformProblem/GetProblemNo",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

        $("#owner").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/QRAP_InformProblem/GetNickName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });
    })


</script>

