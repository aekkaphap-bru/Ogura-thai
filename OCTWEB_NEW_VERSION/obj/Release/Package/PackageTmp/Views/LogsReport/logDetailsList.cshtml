@model OCTWEB_NET45.Models.LogsReportPagedListModel
@using PagedList.Mvc;    
@{
    ViewBag.Title = "Log Details List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("logDetailsList", "LogsReport", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "form1" }))
{
    <div class="row">
        <div class="col text-center">
            <h4 class="font-weight-bolder my-1 text-center">Log Details <span style="color:red;">List</span></h4>
            <p class="text-success">@ViewBag.Message</p>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <fieldset>
                <legend>Enter condition for search logs data</legend>
                <div class="form-row">
                    @Html.ValidationSummary(true)
                </div>
                <div class="form-row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>From Date: </label>
                            @{
                                string fromdate = null;
                            }
                            @if (Model.fromdate.HasValue)
                            {
                                fromdate = Model.fromdate.Value.ToString("yyyy-MM-dd");
                            }
                            <input type="date" name="fromdate" id="fromdate" class="form-control form-control-sm date" value="@fromdate" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>To Date :</label>
                            @{
                                string todate = null;
                            }
                            @if(Model.todate.HasValue)
                            {
                                todate = Model.todate.Value.ToString("yyyy-MM-dd");
                            }
                            <input type="date" name="todate" id="todate" class="form-control form-control-sm date" value="@todate" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>System :</label>
                            @Html.TextBoxFor(m => m.searchSystem, new {@class="form-control form-control-sm", style="width:100%" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Type :</label>
                            @Html.TextBoxFor(m => m.searchType, new {@class="form-control form-control-sm",style="width:100%" })
                        </div>
                    </div>
                </div>
                <div class="form-row">
                  
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="">Action: </label>
                           @Html.TextBoxFor(m => m.searchAction, new {@class="form-control form-control-sm",style="width:100%" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="">Detail: </label>
                            @Html.TextBoxFor(m => m.searchDetail, new { @class = "form-control form-control-sm", style = "width:100%" })
                        </div>
                    </div>
                    <div class="col-md-6 align-self-end">
                        <div class="form-group">
                            <button type="submit" value="Search" class="btn btn-sm btn-success">
                                <i class="fas fa-search"></i> Search
                            </button>
                            <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                <i class="fas fa-eraser"></i> Clear
                            </button>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>  
}
    <div class="row">
        <div class="col">
            <table class="tablecustom" id="table1" style="font-size:14px;">
                <thead>
                    <tr>
                        <th>
                            Items
                        </th>
                        <th>
                            <!--Html.ActionLink("System", "logDetailsList", new { sortOrder = ViewBag.SystemSortParm }) -->
                            System
                        </th>
                        <th>
                            Logs Type
                        </th>
                        <th>
                            Detail
                        </th>
                        <th>
                            Action
                        </th>
                        <th>
                            <!--Html.ActionLink("Date", "logDetailsList", new { sortOrder = ViewBag.DateSortParm })-->
                            <!--Html.Hidden("sortOrder", Model.sortOrder = ViewBag.SystemSortParm)-->
                            <!--<input type="submit" value="Date" class="btn btn-primary" />-->
                            Date
                        </th>
                        <th>
                            Editor
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.LogsReportModelPagedList.Select((value, i) => new { i, value }))
                    {
                        <tr>
                            <td>
                                @((item.i + 1) + (30 * (Model.LogsReportModelPagedList.PageNumber - 1)))

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Log_System)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Log_Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Log_Detail)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.value.Log_Action)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Log_Date)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Log_by)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="row justify-content-center">
        Page @(Model.LogsReportModelPagedList.PageCount < Model.LogsReportModelPagedList.PageNumber ? 0 : Model.LogsReportModelPagedList.PageNumber) of @Model.LogsReportModelPagedList.PageCount
    </div>
    <div class="row justify-content-center">
        @Html.PagedListPager(Model.LogsReportModelPagedList, page => Url.Action("logDetailsList", new RouteValueDictionary()
        {
            {"Page",page},
            {"sortOrder", Model.sortOrder},
            {"fromdate",Model.fromdate},
            {"todate", Model.todate},
            {"searchSystem", Model.searchSystem},
            {"searchType", Model.searchType},
            {"searchAction", Model.searchAction},
            {"searchDetail", Model.searchDetail}
        }))
    </div>

        
       <!--
           <div class="text-center" id="pagingControl">
            <input type="hidden" id="selectedOption" name="selectedOption" />
         </div>
           --> 

<script type="text/javascript">
      $("#todate").change(function () {
            var startDate = document.getElementById("fromdate").value;
            var endDate = document.getElementById("todate").value;

            if ((Date.parse(endDate) < Date.parse(startDate))) {
                 alert("To date should be greater than From date");
                 document.getElementById("todate").value = startDate;
            }
      });

      $("#fromdate").change(function () {
          var startDate = document.getElementById("fromdate").value;
          var endDate = document.getElementById("todate").value;

          if ((Date.parse(endDate) < Date.parse(startDate))) {
              alert("To date should be greater than From date");
              document.getElementById("fromdate").value = endDate;
          }
      });

      $(document).on('select2:open', function (e) {
          const selectId = e.target.id;
          $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
              value.focus();
          });
      });

      $("#clear").click(function () {

          $('#searchDetail').val(null).trigger('change');
          $('#searchAction').val(null).trigger('change');
          $('#searchType').val(null).trigger('change');
          $('#searchSystem').val(null).trigger('change');
          $("input[type=date]").val("");

      });

      $(document).ready(function () {
          /*
          $("#searchSystem").select2({
              placeholder: "All",
              allowClear: true,
              width: 'resolve'
          });
          $("#searchType").select2({
              placeholder: "All",
              allowClear: true,
              width: 'resolve'
          });
          $("#searchAction").select2({
              placeholder: "All",
              allowClear: true,
              width: 'resolve'
          });
          */ 
          $("#searchSystem").autocomplete({
              source: function (request, response) {
                  $.ajax({
                      url: " /LogsReport/GetSystem",
                      type: "POST",
                      dataType: "json",
                      data: { Prefix: request.term },
                      success: function (data) {
                          response($.map(data, function (item) {
                              return item;
                          }))
                      }
                  })
              },
              messages: {
                  noResults: 'No results found.',
                  results: function (count) {
                      return count + (count > 1 ? ' results' : ' result ') + ' found';
                  }
              },
          });

          $("#searchType").autocomplete({
              source: function (request, response) {
                  $.ajax({
                      url: " /LogsReport/GetType",
                      type: "POST",
                      dataType: "json",
                      data: { Prefix: request.term },
                      success: function (data) {
                          response($.map(data, function (item) {
                              return item;
                          }))
                      }
                  })
              },
              messages: {
                  noResults: 'No results found.',
                  results: function (count) {
                      return count + (count > 1 ? ' results' : ' result ') + ' found';
                  }
              },
          });

          $("#searchAction").autocomplete({
              source: function (request, response) {
                  $.ajax({
                      url: " /LogsReport/GetAction",
                      type: "POST",
                      dataType: "json",
                      data: { Prefix: request.term },
                      success: function (data) {
                          response($.map(data, function (item) {
                              return item;
                          }))
                      }
                  })
              },
              messages: {
                  noResults: 'No results found.',
                  results: function (count) {
                      return count + (count > 1 ? ' results' : ' result ') + ' found';
                  }
              },
          });

          $("#searchDetail").autocomplete({
              source: function (request, response) {
                  $.ajax({
                      url: " /LogsReport/GetDetail",
                      type: "POST",
                      dataType: "json",
                      data: { Prefix: request.term },
                      success: function (data) {
                          response($.map(data, function (item) {
                              return item;
                          }))
                      }
                  })
              },
              messages: {
                  noResults: 'No results found.',
                  results: function (count) {
                      return count + (count > 1 ? ' results' : ' result ') + ' found';
                  }
              },
          });

      });

      $("#table1 tbody tr").click(function () {

          if ($(this).hasClass('selected')) {
              $(this).removeClass('selected');
          }
          else {
              $(this).addClass('selected');
          }

      });
</script>


