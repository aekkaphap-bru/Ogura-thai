@using Microsoft.AspNet.Identity
@model OCTWEB_NET45.Models.ManageUserViewModel



<div class="row justify-content-center">
    <p>You're logged in as <strong>@User.Identity.GetUserName()</strong>.</p>
</div>
<div class="row justify-content-center">
    <div class="col-md-8 text-info ">
        <ul style="list-style-type: none; ">
            <li>*We can help you change your password.</li>
            <li>(1) Input old password</li>
            <li>(2) Create new password (Minimum 6 characters)</li>
            <li>(3) Input confirm password</li>
            <li>(4) Click change password</li>
        </ul>
    </div>
</div>
@using (Html.BeginForm("Manage", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="form-row justify-content-center ">
        <div class="col-md-6">
            <div class="form-group">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-row justify-content-center">
        <div class="col-md-6">
            <div class="form-group">
                <label class="mb-1">Old Password: </label>
                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-row justify-content-center ">
        <div class="col-md-6">
            <div class="form-group">
                <label class="mb-1">New Password: </label>
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-row justify-content-center">
        <div class="col-md-6">
            <div class="form-group">
                <label class="mb-1">Confirm Password: </label>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" }) 
            </div>
        </div>
    </div>

    <div class="form-row justify-content-center">
        <div class="col-md-6">
            <div class="form-group">
                <button type="submit" value="Change password" class="btn btn-success">
                    <i class="fas fa-wrench"></i> Change Password
                </button>
                &nbsp;
                <button type="button" onclick="history.back()" name="Cancel" class="btn btn-outline-primary">
                    <i class="fas fa-ban"></i> Cancel
                </button>
            </div> 
        </div>
    </div>
    <!--
    <div class="form-row justify-content-center">
        <div class="col-md-6">
            <div class="form-group">
                <div><a href="/Account/Login"><i class="fas fa-sign-in-alt"></i> Log In </a></div>
            </div>
        </div>
    </div>
        -->
}
<script language="JavaScript">
    /*
    $('#NewPassword, #ConfirmPassword').on('keyup', function () {
        if ($('#NewPassword').val() == $('#ConfirmPassword').val()) {
            $('#message').html('Matching').css('color', 'green');
        } else
            $('#message').html('Not Matching').css('color', 'red');
    })

    $(".validatedForm").validate({
        rules: {
            NewPassword: {
                minlength: 5
            },
            ConfirmPassword: {
                minlength: 5,
                equalTo: "#NewPassword"
            }
        }
    });
    */
</script>
