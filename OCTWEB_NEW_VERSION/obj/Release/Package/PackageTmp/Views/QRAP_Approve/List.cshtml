@model OCTWEB_NET45.Models.ApproveListModel
@using PagedList.Mvc
@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/static/datatables/datatables.min.css" rel="stylesheet" />
<script src="~/static/datatables/datatables.min.js"></script>
<style>
    td.details-control {
        background: url('../static/img/plus-circle-solid.svg') no-repeat center center;
        background-repeat: no-repeat;
        background-size: 20px 20px;
        cursor: pointer;
        /*background:linear-gradient(to right top, #f9f8de, #eefbe3, #e4fdea, #dcfff3, #d8fffd); */
    }

    tr.details td.details-control {
        background: url('../static/img/minus-circle-solid.svg') no-repeat center center;
        background-repeat: no-repeat;
        background-size: 20px 20px;
    }
   
</style>

<div class="container">
  <div class="row">
      <div class="col">
          <h4 class="font-weight-bolder my-1 text-center">4. Approve <span style="color:red;"></span></h4>
          <p class="text-success">@ViewBag.Message</p>
          <p class="text-danger">@ViewBag.errorMessage</p>
          @Html.ValidationSummary(true)
      </div>
  </div>
  <div class="row">
       <div class="col">
                @using (Html.BeginForm("List", "QRAP_Approve", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
                {
                <fieldset>
                    <legend>Enter condition for search problem data</legend>
                    <div class="form-row justify-content-center">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Occur Date: </label>
                                @{
                                    var start_date = Model.start_date.HasValue ? Model.start_date.Value.ToString("yyyy-MM-dd") : null;
                                }
                                <input type="date" name="start_date" id="start_date" class="form-control form-control-sm" value="@start_date" />
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>To: </label>
                                @{
                                    var end_date = Model.end_date.HasValue ? Model.end_date.Value.ToString("yyyy-MM-dd") : null;
                                }
                                <input type="date" name="end_date" id="end_date" class="form-control form-control-sm" value="@end_date">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Department: </label>
                                @Html.DropDownList("department_id", Model.SelectDepartmet, "", new { @class = "form-control form-control-sm", style = "width:100%" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Status: </label>
                                @Html.DropDownList("status", Model.SelectStatus, "", new { @class = "form-control form-control-sm", style = "width:100%" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Problem No: </label>
                                @Html.TextBoxFor(m => m.problem_no, new { @class = "form-control form-control-sm" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row justify-content-center">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Problem Detail: </label>
                                @Html.TextBoxFor(m => m.detail, new { @class = "form-control form-control-sm" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Owner: </label>
                                @Html.TextBoxFor(m => m.owner, new { @class = "form-control form-control-sm" })
                            </div>
                        </div>
                        <div class="col-md-6 align-self-end">
                            <div class="form-group">
                                <button type="submit" id="SearchBtn" name="SearchBtn" class="btn btn-sm btn-success" value="Search">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <!--
                                <button type="button" name="ExportToCsvBtn" id="ExportToCsvBtn" class="btn btn-outline-primary" value="Export">
                                    <i class="fas fa-download"></i> Export
                                </button>-->
                                <input hidden="hidden" id="ExportToCsv" name="ExportToCsv" value="null" />

                                <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                    <i class="fas fa-eraser"></i> Clear
                                </button>
                            </div>
                        </div>
                    </div>
                </fieldset>
                }
          </div>
     </div>
</div>
<div class="container-fluid">
    @using (Html.BeginForm("Delete", "QRAP_Approve", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "Form2" }))
{
    <div class="form-row justify-content-center">
        <div class="col">
            <table class="tablecustom" id="table1" style="font-size:14px; width:100%">
                <thead>
                    <tr>
                        <th>...  </th>
                        <th>
                            Status
                        </th>
                        <th>
                            Solution
                        </th>

                        <th>
                            Items
                        </th>

                        <th>
                            Problem No.
                        </th>
                        <th>
                            Date
                        </th>
                        <th>
                            Problem
                        </th>
                        <th>
                            Reason
                        </th>
                        <th>
                            Response Dept.
                        </th>
                        <th>
                            Owner
                        </th>
                        <th>
                            Detail
                        </th>
                    </tr>
                </thead>
                <!--
                <tbody>
                    foreach (var item in Model.problemPagedListModel.Select((value, i) => new { i, value }))
                    {
                        string status_style = "";
                        if (item.value.status == 1)
                        {
                            status_style = " background-image: linear-gradient(to left, #ffffed, #ffffc4, #ffff99, #ffff69, #fffe23);";
                        }
                        if (item.value.status == 0)
                        {
                            status_style = "background: linear-gradient(to right, #f05757, #fc81a0, #f6afd7, #f1daf6, #ffffff); ";
                        }
                        if (item.value.status == 2)
                        {
                            status_style = " background-image: linear-gradient(to left, #efffed, #ccffc6, #a5ff9e, #77ff73, #23ff3f);";
                        }
                        <tr>
                            <td style="status_style ">
                                <div class="col">
                                    if (item.value.status == 1)
                                    {
                                        <span class="badge badge-warning"> Operating </span>
                                    }
                                    if (item.value.status == 0)
                                    {
                                        <span class="badge badge-danger"> None operate </span>
                                    }
                                    if (item.value.status == 2)
                                    {
                                        <span class="badge badge-success"> Completed </span>
                                    }
                                </div>
                            </td>

                            <td class="text-center">
                                if (item.value.status > 0) {
                                <a href="Url.Action(actionName: "Solutions"
                                         , controllerName: "QRAP_Approve"
                                         , routeValues: new {id = item.value.id })" class="btn btn-sm btn-warning">
                                    <i class="far fa-lightbulb"></i><strong> Solution </strong>
                                </a>
                                }
                            </td>

                            <td>
                                ((item.i + 1) + (30 * (Model.problemPagedListModel.PageNumber - 1)))
                            </td>

                            <td>
                                Html.DisplayFor(m => item.value.problem_no)
                            </td>
                            <td>
                                {
                                  var date_str = item.value.date.ToString("yyyy-MM-dd");
                                }
                                date_str
                            </td>
                            <td>
                                Html.DisplayFor(m => item.value.detail)
                            </td>
                            <td>
                                Html.DisplayFor(m => item.value.reason)
                            </td>
                            <td>
                                Html.DisplayFor(m => item.value.department)
                            </td>
                            <td>
                                Html.DisplayFor(m => item.value.owner)
                            </td>
                            <td>
                                if (!String.IsNullOrEmpty(item.value.file))
                                {
                                    <a href="Url.Action(actionName: "DownloadFile"
                                        , controllerName: "QRAP_Approve"
                                        , routeValues: new {filename = item.value.file })" class="btn btn-sm link-info">
                                        <i class="fas fa-download"></i><strong> Download File</strong>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
                    -->
            </table>

        </div>
    </div>
}
    <!--
    <div class="row justify-content-center">
        Page (Model.problemPagedListModel.PageCount < Model.problemPagedListModel.PageNumber ? 0 : Model.problemPagedListModel.PageNumber) of Model.problemPagedListModel.PageCount
    </div>
       
    <div class="row justify-content-center">
        Html.PagedListPager(Model.problemPagedListModel, page => Url.Action("List", new RouteValueDictionary()
        {
            {"Page",page},
            {"start_date",Model.start_date},
            {"end_date",Model.end_date},
            {"department_id",Model.department_id},
            {"problem_no",Model.problem_no},
            {"detail",Model.detail},
            {"owner",Model.owner},
            {"status",Model.status},

        }))
    </div>
         -->
</div>

<script language="JavaScript">
    // Listen for click on toggle checkbox
    $('#select-all').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
            });
        }
    });

    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $("#SearchBtn").click(function () {
        $("#ExportToCsv").val("");
        document.forms["Form1"].submit();
    })

    $("#ExportToCsvBtn").click(function () {
        $("#ExportToCsv").val("ExportToCsv");
        document.forms["Form1"].submit();
    })

    $("#deleteall").click(function () {
        $("#ExportToCsv").val("");
        if (confirm('Delete all selected elements?')) {
            document.forms["Form2"].submit();
        }
    })


    $("#clear").click(function () {
        $('#start_date').val(null).trigger('change');
        $('#end_date').val(null).trigger('change');
        $('#problem_no').val(null).trigger('change');
        $('#department_id').val(null).trigger('change');
        $('#detail').val(null).trigger('change');
        $('#owner').val(null).trigger('change');
        $('#status').val(null).trigger('change');

    });

    $(document).ready(function () {

        $("#department_id").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#status").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });

    });

    $("#table1 tbody tr").click(function () {

        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            $(this).addClass('selected');
        }
    });

    $(document).ready(function () {
        $("#problem_no").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/QRAP_Approve/GetProblemNo",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

        $("#owner").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/QRAP_Approve/GetNickName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });
    })


    $(document).ready(function () {

        var dt = $("#table1").DataTable({
            "data": @Html.Raw(Json.Encode(Model.problemList)),
            "columns": [
                        {
                            class: 'details-control',
                            orderable: false,
                            data: null,
                            defaultContent: '',
                            "autowidth": true ,
                        },
                        { "data": "status", "autowidth": true 
                            ,"render": function(data,type,row){
                                if(data === 0){
                                    return '<span class="badge badge-danger"> None operate </span>'
                                }else if(data === 1){
                                    return '<span class="badge badge-warning"> Operating </span>'
                                }else{
                                    return '<span class="badge badge-success"> Completed </span>'
                                }
                            }
                        },
                        { "data": "id", "autowidth": true
                            ,"render": function(data, type, row){
                                return '<a href="/QRAP_Approve/Solutions/'+data+'" class="btn btn-sm btn-warning" ><i class="far fa-lightbulb"></i><strong> Solution </strong></a>'
                            }
                        },
                        { "data": null, "autowidth": true 
                            ,"render": function(data, type, full,meta){
                                return meta.row + 1;
                            }
                        },
                        { "data": "problem_no", "autowidth": true },
                        { "data": "date_str", "autowidth": true },
                        { "data": "detail", "autowidth": false },
                        { "data": "reason", "autowidth": true },
                        { "data": "department", "autowidth": true },
                        { "data": "owner", "autowidth": true },
                        { "data": "file"
                            , "render": function(data, type, row){ 
                                if(data != ""){
                                    return '<div><a href="/QRAP_Approve/DownloadFile?filename='+data+'"class="btn btn-sm link-info"><i class="fas fa-download"></i><strong> Download File</strong></a></div>';
                                }
                                else{
                                    return '<div></div>';
                                }
                            }
                        }
            ],
            createdRow: function(row, data, index){
                if(data["status"] === 0){
                    $('td:eq(1)', row).css('background','linear-gradient(to right, #f05757, #fc81a0, #f6afd7, #f1daf6, #ffffff)')
                }
                else if(data["status"] === 1){
                    $('td:eq(1)', row).css('background','linear-gradient(to left, #ffffed, #ffffc4, #ffff99, #ffff69, #fffe23)')
                }
                else{
                    $('td:eq(1)', row).css('background','linear-gradient(to left, #efffed, #ccffc6, #a5ff9e, #77ff73, #23ff3f)')
                }
            },
            select: true,
            buttons: [],
            "pageLength": 20,
            "lengthMenu": [[10,20,30,50,-1],[10,20,30,50,"All"]],
            columnDefs: [ {sortable: false,targets: 0 } ,
                          {sortable: false,targets: 2 } ,
            ],
            order: [[ 3, 'asc' ]],
            fixedColumns: true
       });


        function getDetail(id){
            return $.ajax({
                url: "/QRAP_Approve/GetDatail",
                type: "get",
                data: { id: id},
                async: false,  
            });
        }

        function format(d)
        {
            var html = "";
            var id = d.id;
          
            var request = getDetail(id);

            request.done(function( response ) { 
                html += '<table style="font-size:12px; width:100%; ">'
                        +'<tr style="background:linear-gradient(to left, #f9f8de, #eefbe3, #e4fdea, #dcfff3, #d8fffd); ">'
                        +'<th width=2%>No.</th>'
                        +'<th width=5%>Status</th>'
                        +'<th width=25%>Detail</th>'
                        +'<th width=5%>Plan</th>'
                        +'<th width=10%>Department</th>'
                        +'<th width=5%>Approver</th>'
                        +'<th width=5%>Approved</th>'
                        +'<th width=25%>Answer</th>'
                        +'<th width=5%>Evidence</th>'
                        +'<th width=3%>Rev</th>'
                        +'<th width=10%>Comment</th>'
                        +'<tr>'
                for (var i = 0; i < response.length; i++) {
                    html += '<tr class="ttt" style="background:linear-gradient(to left, #f9f8de, #eefbe3, #e4fdea, #dcfff3, #d8fffd); ">';
                    html += '<td>' + (i+1) + '</td>';

                    if(response[i].status === "0"){
                        html += '<td><a href="/QRAP_Approve/Create/'+ response[i].solution_id +'" ><span class="badge badge-danger"><i class="far fa-lightbulb"></i> No Answer </span></td>';
                    }else if(response[i].status === "1"){
                        html += '<td><a href="/QRAP_Approve/Create/'+ response[i].solution_id +'" ><span class="badge badge-warning"><i class="far fa-lightbulb"></i> Answered </span></td>';
                    }else{
                        html += '<td><a href="/QRAP_Approve/Create/'+ response[i].solution_id +'" ><span class="badge badge-success"><i class="far fa-lightbulb"></i> Approved </span></td>';
                    }
                                    
                    html += '<td>' + response[i].solution_detail + '</td>';

                    if(response[i].plan_date != null){
                        html += '<td>' + response[i].plan_date + '</td>';
                    }else{
                        html += '<td></td>';
                    }
                   
                    if(response[i].department != null){
                        html += '<td>' + response[i].department + '</td>';
                    }else{
                        html += '<td></td>';
                    }
                    
                    if(response[i].approver != null){
                        html += '<td>' + response[i].approver + '</td>';
                    }else{
                        html += '<td></td>';
                    }
                    
                    html += '<td>' + response[i].approve_date + '</td>';

                    if(response[i].answer != null){
                        html += '<td>' + response[i].answer + '</td>';
                    }else{
                        html += '<td></td>';
                    }
                    
                    if(response[i].evidence_file != null){
                        html += '<td><a href="/QRAP_Approve/DownloadFileEvidence?filename='+ response[i].evidence_file +'" class="btn btn-sm link-info"><i class="fas fa-download"></i></td>';
                    }else{
                        html += '<td></td>';
                    }
                    html += '<td>' + response[i].rev + '</td>';

                    if(response[i].comment != null){
                        html += '<td>' + response[i].comment + '</td>';
                    }else{
                        html += '<td></td>';
                    }
                    
                    html += '</tr>';
                }   
                html += '</table>'
            });

            return html;
           
        }

        //Array to track the ids of the details displayed rows
        var detailRows = [];
        $('#table1 tbody').on('click', 'tr td.details-control',function(){
            var tr = $(this).closest('tr');
            var row = dt.row(tr);
            var idx = detailRows.indexOf(tr.attr('id'));

            if(row.child.isShown()){
                tr.removeClass('details');
                row.child.hide();
                //Remove form the 'open' array
                detailRows.splice(idx,1);
            }else{
                tr.addClass('details');
                row.child(format(row.data())).show();
                //Add to the 'open' array
                if(idx === -1){
                    detailRows.push(tr.attr('id'));
                }
            }
        })

        //On each draw, loop over ther 'detailRows' array and show any
        dt.on('draw', function(){
            detailRows.forEach(function(id,i){
                $('#'+ id + 'td.details-control').trigger('click');
            });
        
        });


        /*
        t.on('order.dt search.dt',function(){
            let i = 1;
            t.cells(null,0,{search: 'applied', order:'applied'}).every(function(cell){
                this.data(i++);
            })
        }).draw();
        */
        /*
        $("#table1").DataTable({
            "ajax": {
                "url": "/QRAP_Approve/GetDataTable",
                "tye": "GET",
                "datatype": "json",
            },
            "columns": [
                        { "data": "status", "autowidth": true },
                        { "data": "id", "autowidth": true },
                        { "data": "id", "autowidth": true },
                        { "data": "problem_no", "autowidth": true },
                        { "data": "date", "autowidth": true },
                         { "data": "detail", "autowidth": false },
                        { "data": "reason", "autowidth": true },
                        { "data": "department", "autowidth": true },
                        { "data": "owner", "autowidth": true },
                        { "data": "file", "autowidth": true }

            ]
        });
        */
    });


</script>

