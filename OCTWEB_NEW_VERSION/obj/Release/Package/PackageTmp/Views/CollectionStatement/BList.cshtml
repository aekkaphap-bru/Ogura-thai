@model OCTWEB_NET45.Models.BillingNoteModels
@{
    ViewBag.Title = "Collection Statement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid">
    <div class="form-row">
        <div class="col">
            <div class="btn-group btn-sm shadow-sm border-0 rounded-lg mt-0 mb-3">
                <a href="@Url.Action(actionName: "Setup"
                            , controllerName: "BankAccount"
                            )" class="btn btn-sm btn-outline-secondary ">
                    <i class="fas fa-cog"></i> Setup
                </a>
                <a href="@Url.Action(actionName: "BList"
                            , controllerName: "BillingNote"
                            )" class="btn btn-sm btn-secondary ">
                    <i class="fas fa-print"></i> Billing Note
                </a>
                <a href="@Url.Action(actionName: "BList"
                            , controllerName: "BillingNoteReprint"
                            )" class="btn btn-sm btn-secondary ">
                    <i class="fas fa-list"></i> Results
                </a>
                <a href="@Url.Action(actionName: "BList"
                            , controllerName: "CollectionStatement"
                            )" class="btn btn-sm btn-warning active">
                    <i class="fas fa-print"></i> Collection Statement
                </a>
                <a href="@Url.Action(actionName: "BList"
                            , controllerName: "CollectionStatementReprint"
                            )" class="btn btn-sm btn-warning ">
                    <i class="fas fa-list"></i> Results
                </a>

            </div>
        </div>
    </div>
    @using (Html.BeginForm("BList", "CollectionStatement", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
    {
        <div class="form-row">
            <div class="col-md-12 align-self-center">
                <h4 class="font-weight-bolder my-1 text-center">Collection Statement<span style="color:red;"> Print</span></h4>
            </div>
        </div>
        <div class="form-row">
            <div class="col">
                <p class="text-success">@ViewBag.Message</p>
                @Html.ValidationSummary(true)
            </div>
        </div>
        <div class="form-row">
            <div class="col">
                <fieldset>
                    <legend>Enter condition for search data</legend>

                    <div class="form-row ">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-0">Customer: </label>
                                @Html.DropDownList("customer_id", Model.CustomerSelectList, "Select", new { style = "width:100%", @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(m => m.customer_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @{
                                    string fromdate_str = Model.fromDate.ToString("yyyy-MM-dd");
                                }
                                <label class="mb-0">From date: </label>
                                <input type="date" name="fromDate" class="form-control form-control-sm date" value="@fromdate_str" />
                                @Html.ValidationMessageFor(m => m.fromDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @{
                                    string todate_str = Model.toDate.ToString("yyyy-MM-dd");
                                }
                                <label class="mb-0">To date: </label>
                                <input type="date" name="toDate" class="form-control form-control-sm date" value="@todate_str" />
                                @Html.ValidationMessageFor(m => m.toDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-5 align-self-end">
                            <div class="form-group">
                                <button type="button" id="SearchBtn" name="SearchBtn" class="btn btn-sm btn-success" value="Search">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <input hidden="hidden" id="SearchData" name="SearchData" value="null" />

                                <button type="button" id="ExportCSVBtn" name="ExportCSVBtn" class="btn btn-sm btn-info">
                                    <i class="fa fa-download"></i> Export CSV
                                </button>
                                <input hidden="hidden" id="ExportCSV" name="ExportCSV" value="null" />

                                <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                    <i class="fas fa-eraser"></i> Clear
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="form-row justify-content-center">
                        <div class="col-md-6">
                            <div class="form-group">
                                <!-- <button type="button" id="ExportToExcelBtn" name="ExportToExcelBtn" class="btn btn-sm btn-outline-info">
                                         <i class="fas fa-print"></i> Export Excel
                                 </button>

                                 <input hidden="hidden" id="ExportToExcel" name="ExportToExcel" value="null" />
                                    -->
                            </div>
                        </div>

                    </div>
                </fieldset>
            </div>
        </div>
        <div class="form-row justify-content-center">
            @if (Model.status_print)
            {
                <div class="col">
                    <div class="form-row justify-content-center">
                        <div class="col-md-2">
                            <div class="form-group">
                                @{
                                    string crateDate_str = Model.createDate.ToString("yyyy-MM-dd");
                                }
                                <label class="mb-0">Create date: </label>
                                <input type="date" name="createDate" class="form-control form-control-sm date" value="@crateDate_str" />
                                @Html.ValidationMessageFor(m => m.createDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-0">Document No.</label>
                                @Html.TextBoxFor(m => m.billNo_str, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(m => m.billNo_str, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @{
                                    string dueDate_str = Model.dueDate.ToString("yyyy-MM-dd");
                                }
                                <label class="mb-0">Due date: </label>
                                <input type="date" name="dueDate" class="form-control form-control-sm date" value="@dueDate_str" />
                                @Html.ValidationMessageFor(m => m.dueDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row justify-content-center">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="mb-0">Currency:</label>
                                @Html.TextBoxFor(m => m.amount_type, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(m => m.amount_type, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-0">Bank Account: </label>
                                @Html.DropDownList("acc_id", Model.AccSelectList, "Select", new { style = "width:100%", @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(m => m.acc_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2 align-self-end">
                            <div class="form-group">
                                <button type="button" id="PrintBtn" name="PrintBtn" class="btn btn-sm btn-primary">
                                    <i class="fa fa-print"></i> Print PDF
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="form-row">
            <p class="text-danger">@ViewBag.errorMessage</p>
            @Html.HiddenFor(m => m.customer_id)
            @Html.HiddenFor(m => m.fromDate)
            @Html.HiddenFor(m => m.toDate)
            <input hidden="hidden" id="PrintData" name="PrintData" value="null" />
        </div>
        <div class="form-row">
            <table class="tablecustom" id="table1" style="font-size:14px;">
                <thead>
                    <tr>
                        <th width="2%">
                            <input type="checkbox" name="select-all" id="select-all" />
                        </th>
                        <th>No.</th>
                        <th>InvoiceNo</th>
                        <th>CreateDate</th>
                        <th>DueDate</th>
                        <th>Amount</th>
                        <th>Vat</th>
                        <th>TotalAmount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.BillList.Select((value, i) => new { i, value }))
                    {
                        <tr>
                            <td>
                                <input type="checkbox" name="selectedItem" value="@(item.value.InvoiceNo)" />
                            </td>
                            <td>
                                @(item.i + 1)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.InvoiceNo)
                            </td>
                            <td>
                                @{
                                    string create_date = item.value.InvoiceCreateDate.ToString("dd/MM/yyyy");
                                }
                                @create_date
                            </td>
                            <td>
                                @{
                                    string due_date = item.value.PaymentDueDate.ToString("dd/MM/yyyy");
                                }
                                @due_date
                            </td>
                            <td class="text-right">
                                @Html.DisplayFor(modelItem => item.value.Amount_str)
                            </td>
                            <td class="text-right">
                                @Html.DisplayFor(modelItem => item.value.Vat_str)
                            </td>
                            <td class="text-right">
                                @Html.DisplayFor(modelItem => item.value.TotalAmount_str)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
<script language="JavaScript">

    // Listen for click on toggle checkbox
    $('#select-all').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
            });
        }
    });

    $("#table1 tbody tr").click(function () {
        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            $(this).addClass('selected');
        }
    });

    $(document).ready(function () {
        $("#customer_id").select2({
            placeholder: "Select",
            allowClear: true,
            width: 'resolve'
        });
    })

    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $("#clear").click(function () {
        $('#customer_id').val(null).trigger('change');
        $("input[type=date]").val("");
    });


    $("#SearchBtn").click(function () {
        $("#PrintData").val("");
        $("#ExportCSV").val("");
        document.forms["Form1"].submit();
    })

    $("#PrintBtn").click(function () {
        $("#PrintData").val("PrintData");
        $("#ExportCSV").val("");
        document.forms["Form1"].submit();
    })

    $("#ExportCSVBtn").click(function () {
        $("#ExportCSV").val("ExportCSV");
        $("#PrintData").val("");
        document.forms["Form1"].submit();
    })

</script>