@model OCTWEB_NET45.Models.CourseListModel
@using PagedList.Mvc
@{
    ViewBag.Title = "CourseList";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @Styles.Render("~/Content/css/ModifyTrainingCourseMainList.css")

}

@*<meta charset="UTF-8">*@
<div class="container-fluid">
    <div class="row">
        <a href="/TrainingCourseManagement/CourseSetup" class="btn-outline-secondary"> <i class="fa fa-angle-left"></i> Training Course Setup </a>&nbsp;
    </div>
    <div class="row">
        <div class="container-fluid"
            <div class="container">

                @using (Html.BeginForm("CourseList", "TrainingCourseAddAndManage", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
                {
                    <div class="row justify-content-center mb-4">
                        <div class="col-md-12 text-center">
                            <h4 class="header-title">Training Course <span style="color:red;">Manage</span></h4>
                            <p class="text-success">@ViewBag.Message</p>
                        </div>
                    </div>

                    <div class="search-container">
                        <legend style="color:white">Enter condition for search course</legend>
                        <div class="form-row justify-content-center">
                            @*<div class="col-md-2">
            <div class="form-group">
                <label>Topic: </label>
                @Html.(m => m.search_topic, new { @class = "form-control form-control-sm" })
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label>Location: </label>
                @Html.TextBoxFor(m => m.search_location, new { @class = "form-control form-control-sm" })
            </div>
        </div>*@

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Topic: </label>
                                    <select id="search_topic" name="search_topic" class="form-control form-control-sm" style="width: 100%;">

                                        <option value="">Select Topic</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Location: </label>
                                    <select id="search_location" name="search_location" class="form-control form-control-sm" style="width: 100%;">
                                        <option value="">Select Location</option>
                                    </select>
                                </div>
                            </div>


                            <div class="col-md-2">
                                <div class="form-group">
                                    <label class="mb-1">Start Date: </label>
                                    @{
                                        string startdate = Model.search_startdate.HasValue ?
                                            Model.search_startdate.Value.ToString("yyyy-MM-dd") : "";
                                    }
                                    <input type="date" name="search_startdate" class="form-control form-control-sm date" value="@startdate" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label class="mb-1">End Date: </label>
                                    @{
                                        string enddate = Model.search_enddate.HasValue ?
                                            Model.search_enddate.Value.ToString("yyyy-MM-dd") : "";
                                    }
                                    <input type="date" name="search_enddate" class="form-control form-control-sm date" value="@enddate" />
                                </div>
                            </div>
                            <div class="col-md-4 align-self-end">
                                <div class="form-group">
                                    <button type="submit" id="SearchBtn" name="SearchBtn" value="Search" class="btn btn-sm btn-success">
                                        <i class="fas fa-search"></i> Search
                                    </button>
                                    <button type="button" id="ExportToCsvBtn" name="ExportToCsvBtn" class="btn btn-sm btn-outline-primary " value="null">
                                        <i class="fas fa-file"></i> Export
                                    </button>
                                    <input hidden="hidden" id="ExportToCsv" name="ExportToCsv" value="null" />

                                    <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                        <i class="fas fa-eraser"></i> Clear
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="form-row">
                        @foreach (var item in Model.CourseModelPagedList.Select((value, i) => new { i, value }))
                        {
                            <div class="col-12">
                                <div class="course-card">

                                    <!--style="width: 25rem;"-->
                                    <div class="card-header-custom">
                                        <div class="course-title">@item.value.CourseHeader</div>
                                    </div>

                                    <div class="card-body-custom">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <div class="course-detail">
                                                    <div class="detail-label">Topic:</div>
                                                    <div class="detail-value">@item.value.CourseHeader</div>
                                                </div>
                                                <div class="course-detail">
                                                    <div class="detail-label">Location:</div>
                                                    <div class="detail-value">@item.value.Location</div>
                                                </div>
                                                <div class="course-detail">
                                                    <div class="detail-label">Date:</div>
                                                    <div class="detail-value">@item.value.DateOfTrainingStart.ToString("yyyy-MM-dd") <span style="font-weight:bold"> To </span> @item.value.DateOfTrainingEnd.ToString("yyyy-MM-dd")</div>
                                                </div>
                                                <div class="course-detail">
                                                    <div class="detail-label">Time:</div>
                                                    <div class="detail-value">@item.value.time_str</div>
                                                </div>

                                                <div class="course-detail">
                                                    <div class="detail-label">Trainer:</div>
                                                    <div class="detail-value">@item.value.TrainerName</div>
                                                </div>
                                                <div class="course-detail">
                                                    <div class="detail-label">Price:</div>
                                                    <div class="detail-value">@String.Format("{0:N0}", @item.value.TotalPrice ?? 0) Bath</div>
                                                </div>
                                            </div>
                                            <div class="col-md-4 d-flex align-items-center justify-content-center">
                                                <div class="text-center">
                                                    <a href="@Url.Action(actionName: "ManageCourse", controllerName: "TrainingCourseAddAndManage", routeValues: new { id = @item.value.course_header_id })" class="btn btn-detail btn-block">
                                                        <i class="fas fa-tasks"></i> Detail
                                                    </a>

                                                    @if (item.value.ImportFilePdf != null)
                                                    {
                                                        <a href="@Url.Action(actionName: "DownloadFile", controllerName: "TrainingCourseAddAndManage", routeValues: new { filename = item.value.ImportFilePdf })" class="btn btn-download btn-block">
                                                            <i class="fas fa-download"></i> Download
                                                        </a>
                                                    }
                                                    <a href="@Url.Action(actionName: "DeleteCourse", controllerName: "TrainingCourseAddAndManage", routeValues: new { id = item.value.course_header_id })" class="btn btn-danger btn-block" onclick="return confirm('Are you sure to delete this course?');">
                                                        <i class="fas fa-trash-alt"></i> Delete
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }
                    </div>
                }
                <div class="row justify-content-center">
                    Page @(Model.CourseModelPagedList.PageCount < Model.CourseModelPagedList.PageNumber ? 0 : Model.CourseModelPagedList.PageNumber) of @Model.CourseModelPagedList.PageCount
                </div>
                <div class="row justify-content-center">
                    @Html.PagedListPager(Model.CourseModelPagedList, page => Url.Action("CourseList", new RouteValueDictionary()
                    {
                        {"Page",page},
                        {"search_topic",Model.search_topic},
                        {"search_location",Model.search_location},
                        {"search_startdate",Model.search_startdate},
                        {"search_enddate",Model.search_enddate},
                    }))
                </div>
            </div>
        </div>
    </div>
</div>


<script language="JavaScript">
    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $(document).ready(function () {
        $.getJSON("/TrainingCourseAddAndManage/GetAllTopics", function (data) {
            $.each(data, function (index, item) {
                $("#search_topic").append($("<option></option>").val(item.Value).text(item.Text));
            });
        });

        $.getJSON("/TrainingCourseAddAndManage/GetAllLocations", function (data) {
            $.each(data, function (index, item) {
                $("#search_location").append($("<option></option>").val(item.Value).text(item.Text));
            });
        });
    });



    //$(document).ready(function () {
    //    /*
    //    $("#selected_status").select2({
    //        placeholder: "All",
    //        allowClear: true,
    //        width: 'resolve'
    //    });
    //    */
    //    $("#search_topic").autocomplete({
    //        source: function (request, response) {
    //            $.ajax({
    //                url: "/TrainingCourseAddAndManage/GetTopic",
    //                type: "POST",
    //                dataType: "json",
    //                data: { Prefix: request.term },
    //                success: function (data) {
    //                    response($.map(data, function (item) {
    //                        return item;
    //                    }))
    //                }
    //            })
    //        },
    //        messages: {
    //            noResults: 'No results found.',
    //            results: function (count) {
    //                return count + (count > 1 ? ' results' : ' result ') + ' found';
    //            }
    //        },
    //    });

    //    $("#search_location").autocomplete({
    //        source: function (request, response) {
    //            $.ajax({
    //                url: "/TrainingCourseAddAndManage/GetLocation",
    //                type: "POST",
    //                dataType: "json",
    //                data: { Prefix: request.term },
    //                success: function (data) {
    //                    response($.map(data, function (item) {
    //                        return item;
    //                    }))
    //                }
    //            })
    //        },
    //        messages: {
    //            noResults: 'No results found.',
    //            results: function (count) {
    //                return count + (count > 1 ? ' results' : ' result ') + ' found';
    //            }
    //        },
    //    });

    //});
    /*
    $("body").on("change", "#selected_status", function () {
        if ($('#selected_status').val()) {
            document.forms["Form1"].submit();
        }
    });
    */
    $("#SearchBtn").click(function () {
        $("#ExportToCsv").val("");
        document.forms["Form1"].submit();
    })

    $("#ExportToCsvBtn").click(function () {
        $("#ExportToCsv").val("ExportToCsv");
        document.forms["Form1"].submit();
    })

    $("#clear").click(function () {
        //$('#selected_status').val(null).trigger('change');
        $('#search_topic').val(null).trigger('change');
        $('#search_location').val(null).trigger('change');
        $('input[type=date]').val(null).trigger('change');
    });


</script>