@model OCTWEB_NET45.Models.QRAPGraphModel
@{
    ViewBag.Title = "Graph";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="module" src="~/static/chart.js-4.0.1/dist/chart.js"></script>

<div class="container">
    <div class="card shadow-lg border-0 rounded-lg mt-0 mb-3">
        <div class="card-header justify-content-center">
            <h4 class="font-weight-bolder my-1 text-center">Problem Graph <span style="color:red;"></span></h4>
            <p class="text-success">@ViewBag.Message</p>
            <p class="text-danger">@ViewBag.errorMessage</p>
            @Html.ValidationSummary(true)
        </div>

        <div class="card-body">
            @using (Html.BeginForm("Graph", "QRAP_Graph", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
            {             
                <div class="row">
                    <div class="col">
                        <fieldset>
                            <legend>Enter condition for search problem data</legend>
                            <div class="form-row justify-content-center">
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label>Start Date: </label>
                                        @{
                                            var start_date = Model.start_date.HasValue ? Model.start_date.Value.ToString("yyyy-MM-dd") : null;
                                        }
                                        <input type="date" name="start_date" id="start_date" class="form-control form-control-sm" value="@start_date" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label>End Date: </label>
                                        @{
                                             var end_date = Model.end_date.HasValue ? Model.end_date.Value.ToString("yyyy-MM-dd") : null;
                                        }
                                        <input type="date" name="end_date" id="end_date" class="form-control form-control-sm" value="@end_date">
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label>Type:</label>
                                        @Html.DropDownList("graphType_id", Model.SelectGraphType, new { @class = "form-control form-control-sm", style = "width:100%" })
                                    </div>
                                </div>
                                <div class="col-md-6 align-self-end">
                                    <div class="form-group">
                                        <button type="submit" id="SearchBtn" name="SearchBtn" class="btn btn-sm btn-success" value="Search">
                                            <i class="fas fa-search"></i> Search
                                        </button>
                                        <!--
                                         <button type="button" name="ExportToCsvBtn" id="ExportToCsvBtn" class="btn btn-outline-primary" value="Export">
                                               <i class="fas fa-download"></i> Export
                                         </button>-->
                                        <input hidden="hidden" id="ExportToCsv" name="ExportToCsv" value="null" />

                                        <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                            <i class="fas fa-eraser"></i> Clear
                                        </button>
                                    </div>
                                    
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
                <div style="font-family: Corbel; font-size: small ;text-align:center " class="row justify-content-center">
                    @if(Model.DataSetChart_0 != null)
                    {
                    <div class="col-md justify-content-center">
                        <div style="width:80%;height:80%">
                            <canvas id="ProblemChart" style="padding: 0;margin: auto;display: block; "> </canvas>
                        </div>
                    </div>
                    }
                </div>
                 <div style="text-align:center " class="row justify-content-center">
                    @if(Model.DataSetChart_1 != null)
                    { 
                    <div class="col-md justify-content-center">
                        <div style="width:80%;height:80%">
                            <canvas id="MissionChart" style="padding: 0;margin: auto;display: block; "> </canvas>
                        </div>
                    </div>
                    }
                </div>
                <div class="row justify-content-center" >
                    <div class="col">
                        @if(Model.ProblemTable != null){
                            <table class="tablecustom" id="table1" style="font-size:12px;">
                                <thead>
                                    <tr>
                                        <th width=5%>item</th>
                                        <th width=80%>Department</th>
                                        <th width=15%>Times</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.ProblemTable.Select((value, i) => new { i, value }))
                                    {
                                        <tr>
                                            <td>
                                                @(item.i + 1)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.value.department)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.value.problem_count)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th></th>
                                        <th>Total</th>
                                        <th>@Model.problem_total</th>
                                    </tr>
                                </tfoot>
                            </table>
                        }
                    </div>
                </div>
                <div class="row justify-content-center" >
                    <div class="col">
                        @if(Model.MissionTable != null){
                            <table class="tablecustom" id="table2" style="font-size:12px;">
                                <thead>
                                    <tr>
                                        <th width=5%>item</th>
                                        <th width=45%>Department</th>
                                        <th width=10%>No Answer</th>
                                        <th width=10%>Answered</th>
                                        <th width=10%>Approved</th>
                                        <th width=10%>Approved Late</th>
                                        <th width=10%>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.MissionTable.Select((value, i) => new { i, value }))
                                    {
                                        <tr>
                                            <td>
                                                @(item.i + 1)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.value.department)
                                            </td>
                                            <td>
                                                <a href="@Url.Action("MissionTableDetail",
                                                    new { department_id = item.value.department_id, status = 0
                                                        , start_date = start_date, end_date = end_date})" class="link-secondary">
                                                    @item.value.no_answer_count
                                                </a>
                                            </td>
                                            <td>
                                                <a href="@Url.Action("MissionTableDetail",
                                                    new { department_id = item.value.department_id, status = 1
                                                        , start_date = start_date, end_date = end_date })" class="link-secondary">
                                                    @item.value.answered_count
                                                </a>
                                            </td>
                                            <td>
                                                <a href="@Url.Action("MissionTableDetail",
                                                    new {department_id = item.value.department_id, status=2,
                                                        start_date = start_date, end_date = end_date })" class="link-secondary">
                                                    @item.value.approved_count
                                                </a>
                                            </td>
                                            <td>
                                                <a href="@Url.Action("MissionTableDetail",
                                                    new { department_id = item.value.department_id, status = 3, 
                                                        start_date = start_date, end_date = end_date })" class="link-secondary">
                                                    @item.value.approved_late_count
                                                </a>
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.value.total_count)                                               
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th></th>
                                        <th>Total</th>
                                        <th>@Model.mission_total_noanswer</th>
                                        <th>@Model.mission_total_answered</th>
                                        <th>@Model.mission_total_approved</th>
                                        <th>@Model.mission_total_approvedlate</th>
                                        <th>@Model.mission_total</th>
                                    </tr>
                                </tfoot>
                            </table>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<!--
<div class="container">
    <div class="card shadow-lg border-0 rounded-lg mt-0 mb-3">
        <div class="card-header justify-content-center">
            <h4 class="font-weight-bolder my-1 text-center">Occur Problem Graph <span style="color:red;"></span></h4>
        </div>
        <div class="card-body"> 
            <div style="font-family: Corbel; font-size: small ;text-align:center " class="row">
                <div class="col-md">
                    <div style="width:100%;height:100%">
                        <canvas id="myChart" style="padding: 0;margin: auto;display: block; "> </canvas>
                    </div>
                </div>
                </div>
            </div>
    </div>
</div>
-->


<script language="JavaScript">
            $(document).on('select2:open', function (e) {
                const selectId = e.target.id;
                $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
                    value.focus();
                });   
            });

            $(document).ready(function(){
                $("#graphType_id").select2({
                    placeholder: "",
                    allowClear: true,
                    width: 'resolve'
                });
            });

            $("#clear").click(function () {
                $('#start_date').val(null).trigger('change');
                $('#end_date').val(null).trigger('change');
                $('#graphType_id').val(0).trigger('change');
            });

            $(document).ready(function () {

                var dataset_1 = @Html.Raw(Json.Encode(Model.DataSetChart_0));
                if(dataset_1 != null){
                    var dex = $("#ProblemChart").get(0).getContext("2d");
                    var ProblemChart = new Chart(dex, {
                        type: 'bar',
                        data: dataset_1,
                        options: {
                            responsive: true,
                            title: { display: true, text: 'Problem Chart' },
                            legend: { position: 'top' },
                            scales: {
                                xAxes: [{
                                    
                                }],
                                yAxes: [{
                                    beginAtZero: true,
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Problem (times)'
                                    }
                                }]
                            },                           
                        }
                    });
                }
               
                var dataset_2 = @Html.Raw(Json.Encode(Model.DataSetChart_1));
                if(dataset_2 != null){
                    var mex = $("#MissionChart").get(0).getContext("2d");
                    var MissionChart = new Chart(mex, {
                        type: 'bar',
                        data: dataset_2,
                        options: {
                            responsive: true,
                            title: { display: true, text: 'Mission Chart' },
                            legend: { position: 'top' },
                            responsive: true,
                            scales: {
                                xAxes: [{
                                    stacked: true 
                                }],
                                yAxes: [{
                                    stacked: true,
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Problem (times)'
                                    }
                                }]
                            },
                            hover: {
                                "animationDuration": 0
                            },
                            animation: {
                                onComplete: function () {
                                    var chartInstance = this.chart,
                                        ctx = chartInstance.ctx;
                                    ctx.textAlign = 'center';
                                    ctx.fillStyle = "rgba(227,218,201)";
                                    ctx.textBaseline = 'middle';
                                    this.data.datasets.forEach(function (dataset, i) {
                                        var meta = chartInstance.controller.getDatasetMeta(i);
                                        meta.data.forEach(function (bar, index) {
                                            var data = dataset.data[index];
                                            ctx.fillText(data, bar._model.x, (bar._model.y + bar._model.base ) / 2 );
                                        });
                                    });
                                }
                            }
                           
                        }
                    });
                }
                
            });

           /*     
            $.ajax({
                type: "POST",
                url: "/QRAP_Graph/NewChart",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (chData) {
                    var aData = chData;
                    var aLabels = aData[0];
                    var aDatasets1 = aData[1];
                    var dataT = {
                        labels: aLabels,
                        datasets: [{
                            label: "Test Data",
                            data: aDatasets1,
                            fill: false,
                            backgroundColor: ["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
                            borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                            borderWidth: 1
                        }]
                    };
                    var ctx = $("#myChart").get(0).getContext("2d");
                    var myNewChart = new Chart(ctx, {
                        type: 'bar',
                        data: dataT,
                        options: {
                            responsive: true,
                            title: { display: true, text: 'CHART.JS DEMO CHART' },
                            legend: { position: 'bottom' },
                            scales: {
                                xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' } }],
                                yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                            },
                        }
                    });
                }
            }); */
</script>





