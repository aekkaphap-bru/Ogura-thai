@model OCTWEB_NET45.Models.SearchEmpModel
@using PagedList.Mvc
@{
    ViewBag.Title = "Employee List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid">
    <div class="form-row">
        <div class="col">
            <!--Show dialog Employee Course Model-->
            <div id="empCourseModal" class="modal fade" role="dialog" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable" style="max-width:70%">
                    <div class="modal-content">
                        <div id="empCourseModalContent"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col">
            <!--Show dialog Employee Detail Model-->
            <div id="empDetailModal" class="modal fade" role="dialog" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable " style="max-width:70%">
                    <div class="modal-content">
                        <div id="empDetailModalContent"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col">
            <!--Show dialog Employee Count Model-->
            <div id="empModal" class="modal fade" role="dialog" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable">
                    <div class="modal-content">
                        <div id="empModalContent"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
            @using (Html.BeginForm("EmpList", "EmployeeMasterReport", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
            {
                <div class="form-row">
                    <div class="col-md-6 align-self-center">
                        <h4 class="font-weight-bolder my-1 text-center">Employee Information List <span style="color:green;">Report</span></h4>
                        @Html.HiddenFor(m => m.count_employee)
                        @Html.HiddenFor(m => m.count_contractor)
                        @Html.HiddenFor(m => m.count_all)
                        @Html.HiddenFor(m => m.date_dataupdate)
                    </div>
                    <div class="col-md-6 text-right align-self-end">
                        <div class="form-row ">
                            <div class="col">
                                <p style="font-size:12px;"><span>Data Update Latest: </span><span style="color:blue;"><strong>@Model.date_dataupdate</strong></span></p>
                            </div>
                        </div>
                        <div class="form-row ">
                            <div class="col">
                                <p style="font-size:12px;">
                                    <span>Employee Ogura Clutch:</span>
                                    <a href="javascript:void(0);" class="anchorDetail" data-id="1"> <strong>@Model.count_employee </strong></a>
                                    | <span>Sub Contractor:</span>
                                    <a href="javascript:void(0);" class="anchorDetail" data-id="0"><strong>@Model.count_contractor </strong></a>
                                    | <span> Employee All:</span>
                                    <a href="javascript:void(0);" class="totalAll" data-id="2" title="">
                                        <strong>@Model.count_all</strong>
                                    </a>
                                </p>
                            </div>
                        </div>
                        <div class="form-row ">
                            <div class="col text-right ">
                                <span id="totalAllText" style="background-color:red;font-size:16px;color:white;"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col">
                        <p class="text-success">@ViewBag.Message</p>
                        @Html.ValidationSummary(true)
                    </div>
                </div>
                <div class="form-row">
                    <div class="col">
                        <fieldset>
                            <legend>Enter condition for search employee data</legend>
                            <div class="form-row justify-content-center">
                                <div class="col">
                                    @Html.HiddenFor(m => m.rights_45)
                                    @Html.HiddenFor(m => m.rights_49)
                                </div>
                            </div>
                            <div class="form-row justify-content-center">
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">Emp Id: </label>
                                        @Html.TextBoxFor(m => m.emp_id, new { @class = "form-control form-control-sm", style = "width:100%", maxlength = "6" ,oninput = "this.value = this.value.replace(/[^0-9]/g, '').replace(/^0+/, '');" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">First Name: </label>
                                        @Html.TextBoxFor(m => m.fname, new { @class = "form-control form-control-sm", style = "width:100%", oninput = "this.value = this.value.replace(/[^a-zA-Z]/g , '');" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">Last Name: </label>
                                        @Html.TextBoxFor(m => m.lname, new { @class = "form-control form-control-sm", style = "width:100%", oninput = "this.value = this.value.replace(/[^a-zA-Z]/g , '');" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">Nick Name: </label>
                                        @Html.TextBoxFor(m => m.nickname, new { @class = "form-control form-control-sm", style = "width:100%", oninput = "this.value = this.value.replace(/[^a-zA-Z]/g , '');" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">Cost Center: </label>
                                        @Html.DropDownList("costcenter", Model.SelectCostCenter, "All", new { style = "width:100%", @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">Position: </label>
                                        @Html.DropDownList("position", Model.SelectPosition, "All", new { style = "width:100%", @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-row ">
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">Department: </label>
                                        @Html.DropDownList("deptname", Model.SelectDepartment, "All", new { style = "width:100%", @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">Nationality: </label>
                                        @Html.DropDownList("nationality", Model.SelectNational, "All", new { style = "width:100%", @class="form-control form-control-sm" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="mb-0">Employee Status: </label>
                                        @Html.DropDownList("emp_status", Model.SelectEmpStatus, "All", new { style = "width:100%", @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        @{
                                            string startdate_str = null;
                                        }
                                        @if (Model.dateworking_start.HasValue)
                                        {
                                            startdate_str = Model.dateworking_start.Value.ToString("yyyy-MM-dd");
                                        }
                                        <label class="mb-0">Start working date: </label>
                                        <input type="date" name="dateworking_start" class="form-control form-control-sm date" value="@startdate_str" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        @{
                                            string enddate_str = null;
                                        }
                                        @if (Model.dateworking_end.HasValue)
                                        {
                                            enddate_str = Model.dateworking_end.Value.ToString("yyyy-MM-dd");
                                        }
                                        <label class="mb-0">to </label>
                                        <input type="date" name="dateworking_end" class="form-control form-control-sm date" value="@enddate_str" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-row justify-content-center">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @if (Model.rights_49)
                                        {
                                            <button type="button" id="ExportToCsvBtn" name="ExportToCsvBtn" class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-download"></i> Export CSV
                                            </button>
                                            <button type="button" id="ExportToExcelBtn" name="ExportToExcelBtn" class="btn btn-sm btn-outline-info">
                                                <i class="fas fa-print"></i> Export Excel
                                            </button>
                                        }
                                        <input hidden="hidden" id="ExportToCsv" name="ExportToCsv" value="null" />
                                        <input hidden="hidden" id="ExportToExcel" name="ExportToExcel" value="null"/>

                                        <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                            <i class="fas fa-eraser" ></i> Clear
                                        </button>

                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                      
                                        <button type="submit" id="SearchBtn" name="SearchBtn" class="btn btn-sm btn-success" value="Search">
                                            <i class="fas fa-search"></i> Search
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-4 align-self-end">
                                    <div class="form-row">
                                        <div class="col">
                                            <p style="font-size:12px;">
                                                <span>Employee Ogura Clutch:</span>
                                                <a href="#" id="count_employee_search" title="@Model.count_employee_search_detail"> <strong>@Model.count_employee_search </strong></a>
                                                | <span>Sub Contractor:</span>
                                                <a href="#" title="@Model.count_contractor_search_detail"><strong>@Model.count_contractor_search</strong></a>
                                                | <span> Employee All:</span>
                                                <a href="#" title="@Model.count_all_search_detail"><strong>@Model.count_all_search</strong></a>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            }    
</div>
<div class="container-fluid">
    @using (Html.BeginForm("EmpList", "EmployeeMasterReport", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
    {
        <div class="form-row">
            <table class="tablecustom " id="table1" style="font-size:14px">
                <thead>
                    <tr>
                        <th width=3%>
                            Items
                        </th>
                        <th width=6%>
                            Emp ID
                        </th>
                        <th width=6%>
                            Picture
                        </th>
                        <th width=20%>
                            Name (Eng)
                        </th>
                        <th width=20%>
                            Name (Thai)
                        </th>
                        <th width=15%>
                            Position
                        </th>
                        <th width=10%>
                            Department
                        </th>
                        <th width=10%>
                            CostCenter
                        </th>
                        <th width=5%>
                            Nationality
                        </th>
                        <th width=5%>
                            Detail
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.EmployeePagedList.Select((value, i) => new { i, value }))
                    {
                        <tr>
                            <td>
                                @((item.i + 1) + (30 * (Model.EmployeePagedList.PageNumber - 1)))

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.EmpID)
                            </td>
                            <td>
                                <img style="border:1px solid black;" src="@item.value.emp_profile" height="80" width="50" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.name_eng)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.name_th)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Position)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.DeptDesc)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.CostCenterName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.Nation)
                            </td>
                            <td>
                                <!--<a href="Url.Action(actionName: "EmpDetail"
                                , controllerName: "EmployeeMasterReport", routeValues: new {id=item.value.EmpID })" class="btn btn-sm btn-primary" >
                                    <i class="fas fa-list"></i> Detail
                                </a>-->
                                <a href="#" class="empGetDetail btn btn-sm btn-primary" data-id="@item.value.EmpID">
                                    <i class="fas fa-list"></i> Detail
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    <div class="row justify-content-center">
        Page @(Model.EmployeePagedList.PageCount < Model.EmployeePagedList.PageNumber ? 0 : Model.EmployeePagedList.PageNumber) of @Model.EmployeePagedList.PageCount
    </div>
    <div class="row justify-content-center">
        @Html.PagedListPager(Model.EmployeePagedList, page => Url.Action("EmpList", new RouteValueDictionary()
            {
                {"Page",page},
                {"emp_id",Model.emp_id},
                {"nickname",Model.nickname},
                {"fname",Model.fname},
                {"lname",Model.lname},
                {"idnumber",Model.idnumber},
                {"position",Model.position},
                {"deptname",Model.deptname},
                {"education",Model.education},
                {"costcenter",Model.costcenter},
                {"nationality",Model.nationality},
                {"dateworking_start",Model.dateworking_start},
                {"dateworking_end",Model.dateworking_end},
                {"emp_status",Model.emp_status},
            }))
    </div>
</div>

<script language="JavaScript">
    // Listen for click on toggle checkbox
    $('#select-all').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
            });
        }
    });

    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $(document).ready(function () {
        /*
        $("#position").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#deptcode").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#education").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#costcenter").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#nationality").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#emp_status").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        */
    });

    $("#SearchBtn").click(function () {
        $("#ExportToCsv").val("");
        $("#ExportToExcel").val("");
        document.forms["Form1"].submit();
    })

    $("#ExportToCsvBtn").click(function () {
        $("#ExportToCsv").val("ExportToCsv");
        document.forms["Form1"].submit();
    })

    $("#ExportToExcelBtn").click(function () {
        $("#ExportToExcel").val("ExportToExcel");
        document.forms["Form1"].submit();
    })


    /*
    $("body").on("change", "#searchDepartmentId", function () {
        if ($('#searchDepartmentId').val())
        {
            $("#searchWorkingStandardTypeId").val("");
            $("#searchWorkingStandardProcessId").val("");
            $("#searchWorkingStandardName").val("");
            $("#searchWorkingStandardNo").val("");
            $("#submit_var").val("selected_department");
            document.forms["Form1"].submit();
        }
    }); */

    $("#clear").click(function () {
        $('#position').val(null).trigger('change');
        $('#deptname').val(null).trigger('change');
        $('#education').val(null).trigger('change');
        $('#costcenter').val(null).trigger('change');
        $('#nationality').val(null).trigger('change');
        $('#emp_status').val(null).trigger('change');

        $('#emp_id').val(null).trigger('change');
        $('#nickname').val(null).trigger('change');
        $('#fname').val(null).trigger('change');
        $('#lname').val(null).trigger('change');
        $('#idnumber').val(null).trigger('change');
        $("input[type=date]").val("");

    });


    $("#table1 tbody tr").click(function () {
        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            $(this).addClass('selected');
        }
    });


    $(document).ready(function () {

        $("#emp_id").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/EmployeeMasterReport/GetEmpId",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

        $("#nickname").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/EmployeeMasterReport/GetNName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

        $("#fname").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/EmployeeMasterReport/GetFName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

        $("#lname").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/EmployeeMasterReport/GetLName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

        $("#idnumber").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/EmployeeMasterReport/GetIDNumber",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });
    })

    var TeamPostBackURL = '/EmployeeMasterReport/GetEmpSum';
    $(function () {
        $(".anchorDetail").click(function () {
           // debugger;
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');
            var options = { "backdrop": "static", keyboard: true };
            $.ajax({
                type: "GET",
                url: TeamPostBackURL,
                contentType: "application/json; charset=utf-8",
                data: { "Id": id },
                datatype: "json",
                success: function (data) {
                   // debugger;
                    $('#empModalContent').html(data);
                    $('#empModal').modal(options);
                    $('#empModal').modal('show');

                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });
        //$("#closebtn").on('click',function(){  
        //    $('#empModal').modal('hide');    

        $("#closbtn").click(function () {
            $('#empModal').modal('hide');
        });
    });

    $(function () {
        $(".totalAll").hover(function () {
            var id = 2;
            $.ajax({
                type: "GET",
                url: "/EmployeeMasterReport/GetTotalAll",
                contentType: "application/json; charset=utf-8",
                data: { "id": id },
                datatype: "json",
                success: function (data) {
                   // debugger;
                    var male = data.sum_male;
                    var female = data.sum_female;

                    $("#totalAllText").text("Male: " + male + ", Female: " + female);
                    $('#totalAllText').show("slow");
                    //$('.totalAll').attr("title", "Male: " + male + ", Female: " + female);
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });

        }, function () {
            setTimeout(function () {
                if (!($('.totalAll:hover').length > 0))
                    $('#totalAllText').hide();
            }, 300);
        });

    });

    $(function () {
        $(".empGetDetail").click(function () {
           // debugger;
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');
            var options = { "backdrop": "static", keyboard: true };
            $.ajax({
                type: "GET",
                url: "/EmployeeMasterReport/GetEmpDetail",
                contentType: "application/json; charset=utf-8",
                data: { "id": id },
                datatype: "json",
                success: function (data) {
                   // debugger;
                    $('#empDetailModalContent').html(data);
                    $('#empDetailModal').modal(options);
                    $('#empDetailModal').modal('show');

                },
                error: function () {
                    alert("Get employee detail content load failed.");
                }
            });
        });
        //$("#closebtn").on('click',function(){  
        //    $('#empModal').modal('hide');    

        $("#closbtn").click(function () {
            $('#empDetailModal').modal('hide');
        });
    });
   

</script>