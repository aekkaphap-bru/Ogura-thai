@model OCTWEB_NET45.Models.WorkigStandardSearchModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Working Standard Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col">
            <h4 class="page-title ">Working Standard <span style="color:green;">Search</span></h4>
            <p class="text-success">@ViewBag.Message</p>
            @Html.ValidationSummary(true)
        </div>
        <div class="col text-right align-self-end">
            <p style="font-size:12px;"><span style="font-weight:bold;">Data update latest : </span><span style="font-weight:bold;color:red;">@Model.date_str</span></p>
        </div>
    </div>
    <div class="row">
        <div class="col">
            @using (Html.BeginForm("WorkingStandardList", "WorkingStandardSearch", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
            {
                <fieldset>
                    <legend>Enter condition for working standard data</legend>
                    <div class="form-row justify-content-center">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-1">Department: </label>
                                @Html.DropDownList("searchDepartmentId", Model.SelectDepartment, "All", new { @class = "form-control form-control-sm", @style = "width:100%" })
                                <!--<select name="searchDepartmentId" id="searchDepartmentId"></select>-->
                                <input type="hidden" name="submit_var" id="submit_var" value="">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-1">Working Standard Type: </label>
                                @Html.DropDownList("searchWorkingStandardType", Model.SelectWorkingStandardType, "All", new { @class = "form-control form-control-sm", @style = "width:100%" })
                                <!--<select name="searchWorkingStandardTypeId" id="searchWorkingStandardTypeId"></select>-->
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-1">Working Standard Process: </label>
                                @Html.DropDownList("searchWorkingStandardProcess", Model.SelectWorkingStandardProcess, "All", new { @class = "form-control form-control-sm", @style = "width:100%" })
                                <!--<select name="searchWorkingStandardProcessId" id="searchWorkingStandardProcessId" ></!--select>-->
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-1">Working Standard Name: </label>
                                <!--Html.DropDownList("searchWorkingStandardName", Model.SelectWorkingStandardName, "Select Working Standard Name")-->
                                @Html.TextBoxFor(m => m.searchWorkingStandardName, new { @class = "form-control form-control-sm" })
                            </div>
                        </div>

                    </div>
                    <div class="form-row justify-content-center">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-1">Working Standard No: </label>
                                @Html.TextBoxFor(m => m.searchWorkingStandardNo, new { @class = "form-control form-control-sm" })
                                <!--Html.DropDownList("searchWorkingStandardNo", Model.SelectWorkingStandardNo, "Select Working Standard No")-->
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="mb-1">Sort By: </label>
                                @Html.DropDownList("searchSortBy", Model.SelectSearchSortBy, "", new { @class = "form-control form-control-sm", @style = "width:100%" })
                            </div>
                        </div>
                        <div class="col-md-6 align-self-end">
                            <div class="form-group">
                                <button type="submit" id="SearchBtn" name="SearchBtn" value="Search" class="btn btn-sm btn-success">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <button type="button" id="ExportToCsvBtn" name="ExportToCsvBtn" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-file"></i> Export
                                </button>
                                <input hidden="hidden" id="ExportToCsv" name="ExportToCsv" value="null" />

                                <button id="clear" type="button" name="clear" class="btn btn-sm btn-outline-dark">
                                    <i class="fas fa-eraser"></i> Clear
                                </button>
                            </div>
                        </div>
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>

<div class="container-fluid">
    @using (Html.BeginForm("WorkingStandardList", "WorkingStandardSearch", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "Form1" }))
    {
        <div class="row">
            <table class="tablecustom " id="table1" style="font-size:14px">
                <thead>
                    <tr>
                        <th>
                            Items
                        </th>
                        <th>
                            File
                        </th>
                        <th>
                            Working Standard No.
                        </th>
                        <th>
                            Rev
                        </th>
                        <th>
                            Working Standard Name
                        </th>
                        <th>
                            Update
                        </th>
                        <th>
                            Working Standard Type
                        </th>
                        <th>
                            Working Standard Process
                        </th>
                        <th>
                            WS Date
                        </th>
                        <th>
                            Note
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.WSR_WorkingStandardModelPagedList.Select((value, i) => new { i, value }))
                    {

                        <tr>
                            <td>
                                @((item.i + 1) + (30 * (Model.WSR_WorkingStandardModelPagedList.PageNumber - 1)))

                            </td>
                            <td>
                                @if (!String.IsNullOrEmpty(item.value.WS_File))
                                {
                                    <a href="@Url.Action(actionName: "DownloadFile"
                                            , controllerName: "WorkingStandardSearch"
                                            , routeValues: new {fileName=item.value.WS_File ,WsNumber = item.value.WS_Number})" class="btn btn-sm link-info">
                                        <i class="fas fa-download"></i> Download
                                    </a>
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.WS_Number)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.WS_Rev)
                            </td>
                            <td>
                                <!--Html.DisplayFor(modelItem => item.value.WS_Name)-->
                                @Html.Raw(item.value.WS_Name)
                            </td>
                            <td>
                                @{
                                    var ws_update = item.value.WS_Update.ToString("dd/MM/yyyy");
                                }
                                @ws_update
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.WorkingStandardType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.WorkingStandardProcess)
                            </td>
                            <td>
                                @{
                                    var ws_date = item.value.WS_Date.ToString("dd/MM/yyyy");
                                }
                                @ws_date
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.WS_Note)
                            </td>

                        </tr>

                    }
                </tbody>
            </table>
        </div>
    }
    <div class="row justify-content-center">
        Page @(Model.WSR_WorkingStandardModelPagedList.PageCount < Model.WSR_WorkingStandardModelPagedList.PageNumber ? 0 : Model.WSR_WorkingStandardModelPagedList.PageNumber) of @Model.WSR_WorkingStandardModelPagedList.PageCount
    </div>
    <div class="row justify-content-center">
        @Html.PagedListPager(Model.WSR_WorkingStandardModelPagedList, page => Url.Action("WorkingStandardList", new RouteValueDictionary()
            {
                {"Page",page},
                {"searchDepartmentId",Model.searchDepartmentId},
                {"searchWorkingStandardType",Model.searchWorkingStandardType},
                {"searchWorkingStandardProcess",Model.searchWorkingStandardProcess},
                {"searchWorkingStandardName",Model.searchWorkingStandardName},
                {"searchWorkingStandardNo",Model.searchWorkingStandardNo},
                {"searchSortBy",Model.searchSortBy}
            }))
    </div>
</div>

<script language="JavaScript">
    // Listen for click on toggle checkbox
    $('#select-all').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
            });
        }
    });

    $(document).on('select2:open', function (e) {
        const selectId = e.target.id;
        $(".select2-search__field[aria-controls='select2-" + selectId + "-results']").each(function (key, value) {
            value.focus();
        });
    });

    $("#SearchBtn").click(function () {
        $("#ExportToCsv").val("");
        document.forms["Form1"].submit();
    })

    $("#ExportToCsvBtn").click(function () {
        $("#ExportToCsv").val("ExportToCsv");
        document.forms["Form1"].submit();
    })

    $(document).ready(function () {
        /*
        $("#searchDepartmentId").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#searchWorkingStandardTypeId").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });
        $("#searchWorkingStandardProcessId").select2({
            placeholder: "All",
            allowClear: true,
            width: 'resolve'
        });*/
        /*
        $("#searchWorkingStandardName").select2({
            placeholder: "",
            allowClear: true,
            width: '50%'
        });
        */
        /*  $("#searchWorkingStandardNo").select2({
              placeholder: "",
              allowClear: true,
              width: '50%'
          });
       */
        /*
        $("#searchSortBy").select2({
            placeholder: "",
            allowClear: true,
            width: 'resolve'
        });
        */
    });
    /*
    $("body").on("change", "#searchDepartmentId", function () {
        if ($('#searchDepartmentId').val())
        {
            $("#searchWorkingStandardTypeId").val("");
            $("#searchWorkingStandardProcessId").val("");
            $("#searchWorkingStandardName").val("");
            $("#searchWorkingStandardNo").val("");
            $("#submit_var").val("selected_department");
            document.forms["Form1"].submit();
        }
    }); */

    $("#clear").click(function () {
        $('#searchWorkingStandardProcess').val(null).trigger('change');
        $('#searchWorkingStandardType').val(null).trigger('change');
        $('#searchDepartmentId').val(null).trigger('change');

        $('#searchWorkingStandardName').val(null).trigger('change');
        $('#searchWorkingStandardNo').val(null).trigger('change');
        $('#searchSortBy').val(null).trigger('change');

    });


    $("#table1 tbody tr").click(function () {

        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            $(this).addClass('selected');
        }
    });


    $(document).ready(function () {

        $("#searchWorkingStandardNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/WorkingStandardSearch/GetWorkingStandardNo",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

        $("#searchWorkingStandardName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/WorkingStandardSearch/GetWorkingStandardName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                })
            },
            messages: {
                noResults: 'No results found.',
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            },
        });

    })


    $(function () {
        /*
        AjaxCall('/WorkingStandardSearch/GetDepartment', null).done(function (response) {
            if (response.length > 0) {
                $('#searchDepartmentId').html('');
                var options = '';
                options += '<option value="Select">Select Department</option>';
                for (var i = 0; i < response.length; i++) {
                    options += '<option value="' + response[i].val + '">' + response[i].label + '</option>';
                }
                $('#searchDepartmentId').append(options);

            }
        }).fail(function (error) {
            alert(error.StatusText);
        });
        */
        $('#searchDepartmentId').on("change", function () {
            var wstype = $('#searchWorkingStandardType').val();
            var department = $('#searchDepartmentId').val();
            var obj = { department: department };
            AjaxCall('/WorkingStandardSearch/GetWSType', JSON.stringify(obj), 'POST').done(function (response) {
                if (response.length > 0) {
                    $('#searchWorkingStandardType').html('');
                    var options = '';
                    options += '<option value="">All</option>';
                    for (var i = 0; i < response.length; i++) {
                        options += '<option value="' + response[i].val + '">' + response[i].label + '</option>';
                    }
                    $('#searchWorkingStandardType').append(options);
                }
                else {
                    $('#searchWorkingStandardType').html('');
                }
            }).fail(function (error) {
                //alert(error.StatusText);
                $('#searchWorkingStandardType').html('');
            });

            var obj_2 = { department: department, wstype: wstype };
            AjaxCall('/WorkingStandardSearch/GetWSProcess', JSON.stringify(obj_2), 'POST').done(function (response) {
                if (response.length > 0) {
                    $('#searchWorkingStandardProcess').html('');
                    var options = '';
                    options += '<option value="">All</option>';
                    for (var i = 0; i < response.length; i++) {
                        options += '<option value="' + response[i].val + '">' + response[i].label + '</option>';
                    }
                    $('#searchWorkingStandardProcess').append(options);
                }
                else {
                    $('#searchWorkingStandardProcess').html('');
                }
            }).fail(function (error) {
                //alert(error.StatusText);
                $('#searchWorkingStandardProcess').html('');
            });
        });

        $('#searchWorkingStandardType').on("change", function () {
            var wstype = $('#searchWorkingStandardType').val();
            var department = $('#searchDepartmentId').val();
            var obj = { department: department, wstype: wstype };
            AjaxCall('/WorkingStandardSearch/GetWSProcess', JSON.stringify(obj), 'POST').done(function (response) {
                if (response.length > 0) {
                    $('#searchWorkingStandardProcess').html('');
                    var options = '';
                    options += '<option value="">All</option>';
                    for (var i = 0; i < response.length; i++) {
                        options += '<option value="' + response[i].val + '">' + response[i].label + '</option>';
                    }
                    $('#searchWorkingStandardProcess').append(options);
                }
                else {
                    $('#searchWorkingStandardProcess').html('');
                }
            }).fail(function (error) {
                //alert(error.StatusText);
                $('#searchWorkingStandardProcess').html('');
            });
        });
    });

    function AjaxCall(url, data, type) {
        return $.ajax({
            url: url,
            type: type ? type : 'GET',
            data: data,
            contentType: 'application/json'
        });
    }

     @if (TempData["message"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'error',
                    title: 'เกิดข้อผิดพลาด',
                    text: '@TempData["message"]'
                });

                
            </text>
        }
</script>


